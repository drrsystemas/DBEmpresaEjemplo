// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    [Index("ComprobanteId", Name = "IX_AutorizacionCompra_ComprobanteID")]
    [Index("EmpleadoId", Name = "IX_AutorizacionCompra_EmpleadoID")]
    [Index("FechaEmision", Name = "IX_AutorizacionCompra_FechaEmision")]
    [Index("FechaImputacion", Name = "IX_AutorizacionCompra_FechaImputacion")]
    [Index("NroComprobante", Name = "IX_AutorizacionCompra_NroComprobante")]
    [Index("ProveedorId", Name = "IX_AutorizacionCompra_ProveedorID")]
    [Index("SectorId", Name = "IX_AutorizacionCompra_SectorID")]
    [Index("SucursalId", Name = "IX_AutorizacionCompra_SucursalID")]
    [Index("TalonarioId", Name = "IX_AutorizacionCompra_TalonarioID")]
    public partial class AutorizacionCompra
    {
        public AutorizacionCompra()
        {
            AutorizacionCompraCancelacion = new HashSet<AutorizacionCompraCancelacion>();
            OperacionAdelanto = new HashSet<OperacionAdelanto>();
            OperacionItemProductoPedidoCompra = new HashSet<OperacionItemProductoPedidoCompra>();
        }

        [Key]
        [Column("AutCompraID")]
        public int AutCompraId { get; set; }
        [Key]
        [Column("TipoOperacionID")]
        public byte TipoOperacionId { get; set; }
        [Column(TypeName = "money")]
        public decimal ImporteAutorizado { get; set; }
        [Column("BeneficiarioTipoEntidadID")]
        public byte BeneficiarioTipoEntidadId { get; set; }
        [Column("BeneficiarioRegistroEntidadID")]
        public int BeneficiarioRegistroEntidadId { get; set; }
        [Column("ProveedorID")]
        public int ProveedorId { get; set; }
        [Column("EmpleadoID")]
        public int EmpleadoId { get; set; }
        public bool GenerarAdelanto { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime FechaEmision { get; set; }
        [Column("ComprobanteID")]
        public short ComprobanteId { get; set; }
        [Column("TalonarioID")]
        public short TalonarioId { get; set; }
        public int NroComprobante { get; set; }
        [Column("SectorID")]
        public short? SectorId { get; set; }
        [Column("SucursalID")]
        public short SucursalId { get; set; }
        [StringLength(150)]
        [Unicode(false)]
        public string Observacion { get; set; }
        [Column("AlmaUserID")]
        public int? AlmaUserId { get; set; }
        [Column("AutCompraEstadoID")]
        public short? AutCompraEstadoId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? FechaUltimaModif { get; set; }
        [Column(TypeName = "money")]
        public decimal? SaldoAutCompra { get; set; }
        [Column("MonedaID")]
        public byte? MonedaId { get; set; }
        [Column(TypeName = "money")]
        public decimal? Cotizacion { get; set; }
        [Column(TypeName = "money")]
        public decimal? ImporteMonExt { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? FechaImputacion { get; set; }
        [Column("ProyectoID")]
        public short? ProyectoId { get; set; }

        [ForeignKey("AlmaUserId")]
        [InverseProperty("AutorizacionCompra")]
        public virtual Usuario AlmaUser { get; set; }
        [ForeignKey("AutCompraEstadoId")]
        [InverseProperty("AutorizacionCompra")]
        public virtual AutorizacionCompraEstado AutCompraEstado { get; set; }
        [ForeignKey("EmpleadoId")]
        [InverseProperty("AutorizacionCompra")]
        public virtual Empleado Empleado { get; set; }
        [ForeignKey("ProveedorId")]
        [InverseProperty("AutorizacionCompra")]
        public virtual Proveedor Proveedor { get; set; }
        [ForeignKey("ProyectoId")]
        [InverseProperty("AutorizacionCompra")]
        public virtual Proyecto Proyecto { get; set; }
        [ForeignKey("SectorId")]
        [InverseProperty("AutorizacionCompra")]
        public virtual Sector Sector { get; set; }
        [ForeignKey("SucursalId")]
        [InverseProperty("AutorizacionCompra")]
        public virtual Sucursal Sucursal { get; set; }
        [InverseProperty("AutorizacionCompra")]
        public virtual ICollection<AutorizacionCompraCancelacion> AutorizacionCompraCancelacion { get; set; }
        [InverseProperty("AutorizacionCompra")]
        public virtual ICollection<OperacionAdelanto> OperacionAdelanto { get; set; }
        [InverseProperty("AutorizacionCompra")]
        public virtual ICollection<OperacionItemProductoPedidoCompra> OperacionItemProductoPedidoCompra { get; set; }
    }
}