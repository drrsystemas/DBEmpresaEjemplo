// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    [Index("Cuenta", Name = "IX_PlanDeCuenta_Cuenta")]
    [Index("DescripcionCuenta", Name = "IX_PlanDeCuenta_Descripcion")]
    [Index("Filer", Name = "IX_PlanDeCuenta_Filer")]
    [Index("CuentaTotalizId", "Cuenta", Name = "IX_PlanDeCuentas", IsUnique = true)]
    public partial class PlanDeCuenta
    {
        public PlanDeCuenta()
        {
            BancoTarjeta = new HashSet<BancoTarjeta>();
            Cliente = new HashSet<Cliente>();
            CuentasAsignacion = new HashSet<CuentasAsignacion>();
            ImpuestoCuenta = new HashSet<Impuesto>();
            ImpuestoCuentaId2Navigation = new HashSet<Impuesto>();
            LibroDiarioBalanceItem = new HashSet<LibroDiarioBalanceItem>();
            LibroDiarioItem = new HashSet<LibroDiarioItem>();
            OperacionAdelanto = new HashSet<OperacionAdelanto>();
            OperacionCreditoPlanesPagoCuentaIdcomisionNavigation = new HashSet<OperacionCreditoPlanesPago>();
            OperacionCreditoPlanesPagoCuentaIdgastosNavigation = new HashSet<OperacionCreditoPlanesPago>();
            OperacionCreditoPlanesPagoCuentaIdintPunitoriosNavigation = new HashSet<OperacionCreditoPlanesPago>();
            OperacionCreditoPlanesPagoCuentaIdinteresNavigation = new HashSet<OperacionCreditoPlanesPago>();
            OperacionDetallePago = new HashSet<OperacionDetallePago>();
            OperacionFormaPago = new HashSet<OperacionFormaPago>();
            OperacionImputacion = new HashSet<OperacionImputacion>();
            OperacionRendicionPaseCuenta = new HashSet<OperacionRendicionPase>();
            OperacionRendicionPaseCuentaIdajusteNavigation = new HashSet<OperacionRendicionPase>();
            OperacionRendicionPaseCuentaIdpaseNavigation = new HashSet<OperacionRendicionPase>();
            OperacionResumenDetalle = new HashSet<OperacionResumenDetalle>();
            PlanDeCuentaCentroCostoCuenta = new HashSet<PlanDeCuentaCentroCostoCuenta>();
            PlanDeCuentaImpuesto = new HashSet<PlanDeCuentaImpuesto>();
            PlanDeCuentaInventarioAjusteCuenta = new HashSet<PlanDeCuentaInventario>();
            PlanDeCuentaInventarioCuenta = new HashSet<PlanDeCuentaInventario>();
            PlanDeCuentaProyeccion = new HashSet<PlanDeCuentaProyeccion>();
            ProductoBaseCuenta = new HashSet<ProductoBase>();
            ProductoBaseCuentaIdcostoNavigation = new HashSet<ProductoBase>();
            ProductoBaseCuentaIdstockNavigation = new HashSet<ProductoBase>();
            ProductoFamiliaCuenta = new HashSet<ProductoFamilia>();
            ProductoFamiliaCuentaIdcostoNavigation = new HashSet<ProductoFamilia>();
            ProductoFamiliaCuentaIdstockNavigation = new HashSet<ProductoFamilia>();
            ProveedorAdelantoCuenta = new HashSet<Proveedor>();
            ProveedorCuenta = new HashSet<Proveedor>();
            TransporteCargaCierrePeriodoDetalle = new HashSet<TransporteCargaCierrePeriodoDetalle>();
            VendedorCuentaIdcomisGralNavigation = new HashSet<Vendedor>();
            VendedorCuentaIdcomisProdNavigation = new HashSet<Vendedor>();
        }

        /// <summary>
        /// Cuenta en la que totaliza (Pertenece)
        /// </summary>
        [Column("CuentaTotalizID")]
        public int CuentaTotalizId { get; set; }
        /// <summary>
        /// Numero de cuenta dentro de la cuenta totalizadora (Comienza a partir de 1 por cada cuenta Totalizadora
        /// </summary>
        public int Cuenta { get; set; }
        [Required]
        [StringLength(250)]
        [Unicode(false)]
        public string DescripcionCuenta { get; set; }
        /// <summary>
        /// Codigo Unico De cuenta
        /// </summary>
        [Key]
        [Column("CuentaID")]
        public int CuentaId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime FechaAlta { get; set; }
        /// <summary>
        /// Referenta a como utilizar la cuenta y el por que esta.
        /// </summary>
        [Unicode(false)]
        public string Observaciones { get; set; }
        /// <summary>
        /// 0 o null no realiza 1-Ingresa Comprobante Debes y registra Salida Haber 2-Ingresa Comprobante en Haber y registra Salida Debe
        /// </summary>
        public short? GestionComprobante { get; set; }
        /// <summary>
        /// Se evita la utilizacion de esta cuenta en las operaciones
        /// </summary>
        [Column("inhabilitado")]
        public bool Inhabilitado { get; set; }
        /// <summary>
        /// Centro de Costo Principal (permite una sola cuenta por centro de costo)
        /// </summary>
        [Column("CentroCostoID")]
        public int? CentroCostoId { get; set; }
        [Column("ClasificacionID")]
        public short? ClasificacionId { get; set; }
        [Column("MonedaID")]
        public byte? MonedaId { get; set; }
        public int? Filer { get; set; }
        /// <summary>
        /// Indico si es Importe Fijo
        /// </summary>
        public bool? EsImporteFijo { get; set; }
        /// <summary>
        /// Importe Estimado Mensual
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImporteEstimado { get; set; }
        /// <summary>
        /// Indica q es de aplicacion Obligatoria
        /// </summary>
        public bool? EsObligatorio { get; set; }
        /// <summary>
        /// Por deffecto seria el de Familia COmpleto (la idea es mostrar por coincidencia a medida q se escribe)
        /// </summary>
        [StringLength(50)]
        [Unicode(false)]
        public string CodigoAlfanumerico { get; set; }
        public byte? DesgloseNivel1 { get; set; }
        public byte? DesgloseNivel2 { get; set; }
        public byte? DesgloseNivel3 { get; set; }
        public byte? DesgloseNivel4 { get; set; }
        /// <summary>
        /// Se indica el Porcentaje de tolerancia Positivo o Negativo (del importe Estimado)
        /// </summary>
        [Column(TypeName = "decimal(9, 3)")]
        public decimal? PorcentajeTolerancia { get; set; }
        [Column("TipoAjusteID")]
        public short? TipoAjusteId { get; set; }
        [Column("TablaIndiceID")]
        public short? TablaIndiceId { get; set; }

        [ForeignKey("CentroCostoId")]
        [InverseProperty("PlanDeCuenta")]
        public virtual PlanDeCuentaCentroCosto CentroCosto { get; set; }
        [ForeignKey("ClasificacionId")]
        [InverseProperty("PlanDeCuenta")]
        public virtual PlanDeCuentaClasificacion Clasificacion { get; set; }
        [ForeignKey("CuentaTotalizId")]
        [InverseProperty("PlanDeCuenta")]
        public virtual PlanDeCuentasTotalizadora CuentaTotaliz { get; set; }
        [ForeignKey("MonedaId")]
        [InverseProperty("PlanDeCuenta")]
        public virtual MonedaTipo Moneda { get; set; }
        [ForeignKey("TablaIndiceId")]
        [InverseProperty("PlanDeCuenta")]
        public virtual PlanDeCuentaTablaIndice TablaIndice { get; set; }
        [ForeignKey("TipoAjusteId")]
        [InverseProperty("PlanDeCuenta")]
        public virtual PlanDeCuentaTipoAjuste TipoAjuste { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ProduccionGasto ProduccionGasto { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<BancoTarjeta> BancoTarjeta { get; set; }
        [InverseProperty("AdelantoCuenta")]
        public virtual ICollection<Cliente> Cliente { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<CuentasAsignacion> CuentasAsignacion { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<Impuesto> ImpuestoCuenta { get; set; }
        [InverseProperty("CuentaId2Navigation")]
        public virtual ICollection<Impuesto> ImpuestoCuentaId2Navigation { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<LibroDiarioBalanceItem> LibroDiarioBalanceItem { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<LibroDiarioItem> LibroDiarioItem { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<OperacionAdelanto> OperacionAdelanto { get; set; }
        [InverseProperty("CuentaIdcomisionNavigation")]
        public virtual ICollection<OperacionCreditoPlanesPago> OperacionCreditoPlanesPagoCuentaIdcomisionNavigation { get; set; }
        [InverseProperty("CuentaIdgastosNavigation")]
        public virtual ICollection<OperacionCreditoPlanesPago> OperacionCreditoPlanesPagoCuentaIdgastosNavigation { get; set; }
        [InverseProperty("CuentaIdintPunitoriosNavigation")]
        public virtual ICollection<OperacionCreditoPlanesPago> OperacionCreditoPlanesPagoCuentaIdintPunitoriosNavigation { get; set; }
        [InverseProperty("CuentaIdinteresNavigation")]
        public virtual ICollection<OperacionCreditoPlanesPago> OperacionCreditoPlanesPagoCuentaIdinteresNavigation { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<OperacionDetallePago> OperacionDetallePago { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<OperacionFormaPago> OperacionFormaPago { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<OperacionImputacion> OperacionImputacion { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<OperacionRendicionPase> OperacionRendicionPaseCuenta { get; set; }
        [InverseProperty("CuentaIdajusteNavigation")]
        public virtual ICollection<OperacionRendicionPase> OperacionRendicionPaseCuentaIdajusteNavigation { get; set; }
        [InverseProperty("CuentaIdpaseNavigation")]
        public virtual ICollection<OperacionRendicionPase> OperacionRendicionPaseCuentaIdpaseNavigation { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<OperacionResumenDetalle> OperacionResumenDetalle { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<PlanDeCuentaCentroCostoCuenta> PlanDeCuentaCentroCostoCuenta { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<PlanDeCuentaImpuesto> PlanDeCuentaImpuesto { get; set; }
        [InverseProperty("AjusteCuenta")]
        public virtual ICollection<PlanDeCuentaInventario> PlanDeCuentaInventarioAjusteCuenta { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<PlanDeCuentaInventario> PlanDeCuentaInventarioCuenta { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<PlanDeCuentaProyeccion> PlanDeCuentaProyeccion { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<ProductoBase> ProductoBaseCuenta { get; set; }
        [InverseProperty("CuentaIdcostoNavigation")]
        public virtual ICollection<ProductoBase> ProductoBaseCuentaIdcostoNavigation { get; set; }
        [InverseProperty("CuentaIdstockNavigation")]
        public virtual ICollection<ProductoBase> ProductoBaseCuentaIdstockNavigation { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<ProductoFamilia> ProductoFamiliaCuenta { get; set; }
        [InverseProperty("CuentaIdcostoNavigation")]
        public virtual ICollection<ProductoFamilia> ProductoFamiliaCuentaIdcostoNavigation { get; set; }
        [InverseProperty("CuentaIdstockNavigation")]
        public virtual ICollection<ProductoFamilia> ProductoFamiliaCuentaIdstockNavigation { get; set; }
        [InverseProperty("AdelantoCuenta")]
        public virtual ICollection<Proveedor> ProveedorAdelantoCuenta { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<Proveedor> ProveedorCuenta { get; set; }
        [InverseProperty("Cuenta")]
        public virtual ICollection<TransporteCargaCierrePeriodoDetalle> TransporteCargaCierrePeriodoDetalle { get; set; }
        [InverseProperty("CuentaIdcomisGralNavigation")]
        public virtual ICollection<Vendedor> VendedorCuentaIdcomisGralNavigation { get; set; }
        [InverseProperty("CuentaIdcomisProdNavigation")]
        public virtual ICollection<Vendedor> VendedorCuentaIdcomisProdNavigation { get; set; }
    }
}