// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    /// <summary>
    /// Las Distintas Cuentas de Banco y Tarjetas q se utilizan en la empresa
    /// </summary>
    [Index("CuentaId", Name = "IX_BancoTarjeta_CuentaID")]
    [Index("DescripcionCuentaBanco", Name = "IX_BancoTarjeta_DescripcionCuentaBanco")]
    [Index("EmpresaId", Name = "IX_BancoTarjeta_EmpresaID")]
    [Index("NroBanco", Name = "IX_BancoTarjeta_NroBanco")]
    public partial class BancoTarjeta
    {
        public BancoTarjeta()
        {
            BancoTarjetaConciliacion = new HashSet<BancoTarjetaConciliacion>();
            BancoTarjetaDebe = new HashSet<BancoTarjetaDebe>();
            BancoTarjetaFirmanteAutorizado = new HashSet<BancoTarjetaFirmanteAutorizado>();
            BancoTarjetaHaber = new HashSet<BancoTarjetaHaber>();
            BancoTarjeteLoteDetalle = new HashSet<BancoTarjeteLoteDetalle>();
            Chequera = new HashSet<Chequera>();
            EmpresaDatosBancoTarjetaId1Navigation = new HashSet<EmpresaDatos>();
            EmpresaDatosBancoTarjetaId2Navigation = new HashSet<EmpresaDatos>();
            OperacionFormaPago = new HashSet<OperacionFormaPago>();
        }

        /// <summary>
        /// Cuenta de Banco o Tarjeta
        /// </summary>
        [Key]
        [Column("BancoTarjetaID")]
        public int BancoTarjetaId { get; set; }
        [Required]
        [StringLength(250)]
        [Unicode(false)]
        public string DescripcionCuentaBanco { get; set; }
        /// <summary>
        /// 1-Cuenta Banco 2-Cuenta Tarjeta
        /// </summary>
        public byte TipoCuenta { get; set; }
        /// <summary>
        /// Cuenta contable a la que esta relacionada
        /// </summary>
        [Column("CuentaID")]
        public int? CuentaId { get; set; }
        public int? NroBanco { get; set; }
        /// <summary>
        /// Nro de la Sucursal del Banco
        /// </summary>
        public int? SucursalBanco { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string CuentaNro { get; set; }
        /// <summary>
        /// Reporte a Utilizar para Impresion Cheque
        /// </summary>
        public byte[] Reporte { get; set; }
        [Column("EmpresaID")]
        public int? EmpresaId { get; set; }
        /// <summary>
        /// Ingreso todos los datos referentes a la cuenta de este banco/tarjeta
        /// </summary>
        public string Observaciones { get; set; }
        /// <summary>
        /// Nro Proveedor, utilizado para indicar al realizar los pagos por deposito o por carga de gastos en Compras
        /// </summary>
        [Column("ProveedorID")]
        public int? ProveedorId { get; set; }
        public bool Inhabilitado { get; set; }
        /// <summary>
        /// Reporte a Utilizar para Impresion Cheque Diferido
        /// </summary>
        public byte[] ReporteDiferido { get; set; }
        public int? Filer { get; set; }
        /// <summary>
        /// Sector que realizo la Venta
        /// </summary>
        [Column("SectorID")]
        public short? SectorId { get; set; }
        /// <summary>
        /// N° de Sucursal
        /// </summary>
        [Column("SucursalID")]
        public short? SucursalId { get; set; }
        [Column("IDRegistro")]
        public long? Idregistro { get; set; }
        [StringLength(100)]
        [Unicode(false)]
        public string TokenApp { get; set; }
        [Column("AplicacionID")]
        public long? AplicacionId { get; set; }
        [StringLength(20)]
        [Unicode(false)]
        public string TokenSucursal { get; set; }
        public bool? GenerarBaucher { get; set; }
        public bool? EnviarDetalleVenta { get; set; }
        [Column("BancoCBU")]
        [StringLength(22)]
        [Unicode(false)]
        public string BancoCbu { get; set; }
        [Column("BancoAliasCBU")]
        [StringLength(50)]
        [Unicode(false)]
        public string BancoAliasCbu { get; set; }
        public long? MercoPagoClientId { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string MercadoPagoClientSecret { get; set; }
        [Column("jsonConfiguracion")]
        [StringLength(512)]
        [Unicode(false)]
        public string JsonConfiguracion { get; set; }

        [ForeignKey("CuentaId")]
        [InverseProperty("BancoTarjeta")]
        public virtual PlanDeCuenta Cuenta { get; set; }
        [ForeignKey("EmpresaId")]
        [InverseProperty("BancoTarjeta")]
        public virtual EmpresaDatos Empresa { get; set; }
        [ForeignKey("ProveedorId")]
        [InverseProperty("BancoTarjeta")]
        public virtual Proveedor Proveedor { get; set; }
        [ForeignKey("SectorId")]
        [InverseProperty("BancoTarjeta")]
        public virtual Sector Sector { get; set; }
        [ForeignKey("SucursalId")]
        [InverseProperty("BancoTarjeta")]
        public virtual Sucursal Sucursal { get; set; }
        [InverseProperty("BancoTarjeta")]
        public virtual ICollection<BancoTarjetaConciliacion> BancoTarjetaConciliacion { get; set; }
        [InverseProperty("BancoTarjeta")]
        public virtual ICollection<BancoTarjetaDebe> BancoTarjetaDebe { get; set; }
        [InverseProperty("BancoTarjeta")]
        public virtual ICollection<BancoTarjetaFirmanteAutorizado> BancoTarjetaFirmanteAutorizado { get; set; }
        [InverseProperty("BancoTarjeta")]
        public virtual ICollection<BancoTarjetaHaber> BancoTarjetaHaber { get; set; }
        [InverseProperty("BancoTarjeta")]
        public virtual ICollection<BancoTarjeteLoteDetalle> BancoTarjeteLoteDetalle { get; set; }
        [InverseProperty("BancoTarjeta")]
        public virtual ICollection<Chequera> Chequera { get; set; }
        [InverseProperty("BancoTarjetaId1Navigation")]
        public virtual ICollection<EmpresaDatos> EmpresaDatosBancoTarjetaId1Navigation { get; set; }
        [InverseProperty("BancoTarjetaId2Navigation")]
        public virtual ICollection<EmpresaDatos> EmpresaDatosBancoTarjetaId2Navigation { get; set; }
        [InverseProperty("BancoTarjeta")]
        public virtual ICollection<OperacionFormaPago> OperacionFormaPago { get; set; }
    }
}