// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    [Table("TransporteCRT")]
    [Index("C11idclaseBultos", Name = "IX_TransporteCRT_C11IDClaseBultos")]
    [Index("C14valorComercialTipoId", Name = "IX_TransporteCRT_C14ValorComercialTipoID")]
    [Index("C15clienteIddestino", Name = "IX_TransporteCRT_C15ClienteIDDestino")]
    [Index("C15clienteIdorigen", Name = "IX_TransporteCRT_C15ClienteIDOrigen")]
    [Index("C2crtmicid", Name = "IX_TransporteCRT_C2CRTMICID")]
    [Index("CargaId", Name = "IX_TransporteCRT_CargaID")]
    [Index("FechaCrt", Name = "IX_TransporteCRT_FechaCRT")]
    [Index("SucursalId", Name = "IX_TransporteCRT_SucursalID")]
    [Index("TransporteCrtestadoId", Name = "IX_TransporteCRT_TransporteCRTEstadoID")]
    public partial class TransporteCrt
    {
        public TransporteCrt()
        {
            TransporteCrtviajes = new HashSet<TransporteCrtviajes>();
            TransporteMiccrt = new HashSet<TransporteMiccrt>();
        }

        [Key]
        [Column("CRT_ID")]
        public int CrtId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime FechaAlta { get; set; }
        [Column("FechaCRT", TypeName = "datetime")]
        public DateTime? FechaCrt { get; set; }
        [Column("PaisID")]
        public short? PaisId { get; set; }
        [Column("SucursalID")]
        public short? SucursalId { get; set; }
        [Column("C2CRTMICID")]
        public int C2crtmicid { get; set; }
        [Column("CargaID")]
        public int CargaId { get; set; }
        [Column("C1Remitente")]
        [StringLength(300)]
        [Unicode(false)]
        public string C1remitente { get; set; }
        [Column("C4Destinatario")]
        [StringLength(300)]
        [Unicode(false)]
        public string C4destinatario { get; set; }
        [Column("C6Consignatario")]
        [StringLength(300)]
        [Unicode(false)]
        public string C6consignatario { get; set; }
        [Column("C9NotificarA")]
        [StringLength(300)]
        [Unicode(false)]
        public string C9notificarA { get; set; }
        [Column("C5Origen")]
        [StringLength(150)]
        [Unicode(false)]
        public string C5origen { get; set; }
        [Column("C7OrigenCargo")]
        [StringLength(150)]
        [Unicode(false)]
        public string C7origenCargo { get; set; }
        [Column("C8Entrega")]
        [StringLength(150)]
        [Unicode(false)]
        public string C8entrega { get; set; }
        [Column("C10Sucesivos")]
        [StringLength(300)]
        [Unicode(false)]
        public string C10sucesivos { get; set; }
        [Column("C11IDClaseBultos")]
        public short C11idclaseBultos { get; set; }
        [Column("C11CantidadBultos", TypeName = "money")]
        public decimal? C11cantidadBultos { get; set; }
        [Column("C11DetalleCarga")]
        [Unicode(false)]
        public string C11detalleCarga { get; set; }
        [Column("C11NCM")]
        [StringLength(50)]
        [Unicode(false)]
        public string C11ncm { get; set; }
        [Column("C12UnidadMedidaID")]
        public short? C12unidadMedidaId { get; set; }
        [Column("C12PesoBruto", TypeName = "decimal(13, 3)")]
        public decimal? C12pesoBruto { get; set; }
        [Column("C12PesoNeto", TypeName = "decimal(13, 3)")]
        public decimal? C12pesoNeto { get; set; }
        [Column("C13VolumenM3", TypeName = "decimal(13, 3)")]
        public decimal? C13volumenM3 { get; set; }
        [Column("C14Valor", TypeName = "money")]
        public decimal? C14valor { get; set; }
        [Column("C14MonedaID")]
        public byte? C14monedaId { get; set; }
        [Column("C14ValorComercialTipoID")]
        public short? C14valorComercialTipoId { get; set; }
        [Column("C15LugarPago")]
        public byte? C15lugarPago { get; set; }
        [Column("C15MonedaID")]
        public byte? C15monedaId { get; set; }
        [Column("C15FleteOrigen", TypeName = "money")]
        public decimal? C15fleteOrigen { get; set; }
        [Column("C15FleteCruce", TypeName = "money")]
        public decimal? C15fleteCruce { get; set; }
        [Column("C15FleteDestino", TypeName = "money")]
        public decimal? C15fleteDestino { get; set; }
        [Column("C15Seguro", TypeName = "money")]
        public decimal? C15seguro { get; set; }
        [Column("C15TotalOrigen", TypeName = "money")]
        public decimal? C15totalOrigen { get; set; }
        [Column("C15TotalDestino", TypeName = "money")]
        public decimal? C15totalDestino { get; set; }
        [Column("C15SectorID")]
        public short? C15sectorId { get; set; }
        [Column("C15ClienteIDOrigen")]
        public int? C15clienteIdorigen { get; set; }
        [Column("C15ClienteIDDestino")]
        public int? C15clienteIddestino { get; set; }
        [Column("C16ValorDeclarado", TypeName = "money")]
        public decimal? C16valorDeclarado { get; set; }
        [Column("C16MonedaID")]
        public byte? C16monedaId { get; set; }
        [Column("C16ValorComercialTipoID1")]
        public short? C16valorComercialTipoId1 { get; set; }
        [Column("C16Leyenda")]
        [StringLength(150)]
        [Unicode(false)]
        public string C16leyenda { get; set; }
        [Column("C17DocumentosAnexos")]
        [Unicode(false)]
        public string C17documentosAnexos { get; set; }
        [Column("C18IDCRTAduana")]
        [StringLength(300)]
        [Unicode(false)]
        public string C18idcrtaduana { get; set; }
        [Column("C19FleteExterno", TypeName = "money")]
        public decimal? C19fleteExterno { get; set; }
        [Column("C20Reembolso", TypeName = "money")]
        public decimal? C20reembolso { get; set; }
        [Column("C21RemitenteRep")]
        [StringLength(150)]
        [Unicode(false)]
        public string C21remitenteRep { get; set; }
        [Column("C22Observaciones")]
        [Unicode(false)]
        public string C22observaciones { get; set; }
        [Column("C24DestinatarioRep")]
        [StringLength(150)]
        [Unicode(false)]
        public string C24destinatarioRep { get; set; }
        [Column("TransporteCRTEstadoID")]
        public short? TransporteCrtestadoId { get; set; }
        [Column(TypeName = "money")]
        public decimal? Cotizacion { get; set; }
        [Column("TipoOperacionID")]
        public byte TipoOperacionId { get; set; }

        [ForeignKey("C11idclaseBultos")]
        [InverseProperty("TransporteCrt")]
        public virtual TransporteClaseBultos C11idclaseBultosNavigation { get; set; }
        [ForeignKey("C14valorComercialTipoId")]
        [InverseProperty("TransporteCrt")]
        public virtual TransporteCargaValorComercialTipo C14valorComercialTipo { get; set; }
        [ForeignKey("C15clienteIddestino")]
        [InverseProperty("TransporteCrtC15clienteIddestinoNavigation")]
        public virtual Cliente C15clienteIddestinoNavigation { get; set; }
        [ForeignKey("C15clienteIdorigen")]
        [InverseProperty("TransporteCrtC15clienteIdorigenNavigation")]
        public virtual Cliente C15clienteIdorigenNavigation { get; set; }
        [ForeignKey("C2crtmicid")]
        [InverseProperty("TransporteCrt")]
        public virtual PermisoEmpresaNroCrtmic C2crtmic { get; set; }
        [ForeignKey("SucursalId")]
        [InverseProperty("TransporteCrt")]
        public virtual Sucursal Sucursal { get; set; }
        [ForeignKey("TipoOperacionId,CargaId")]
        [InverseProperty("TransporteCrt")]
        public virtual TransporteCarga TransporteCarga { get; set; }
        [ForeignKey("TransporteCrtestadoId")]
        [InverseProperty("TransporteCrt")]
        public virtual TransporteCrtestado TransporteCrtestado { get; set; }
        [InverseProperty("Crt")]
        public virtual ICollection<TransporteCrtviajes> TransporteCrtviajes { get; set; }
        [InverseProperty("Crt")]
        public virtual ICollection<TransporteMiccrt> TransporteMiccrt { get; set; }
    }
}