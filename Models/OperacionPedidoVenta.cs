// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    [Index("ComprobanteId", "TalonarioId", "TipoOperacionId", Name = "ComprobanteIDTalonarioIDTipoOperacion")]
    [Index("PedidoVentaId", Name = "IX_OperacionPedidoVenta", IsUnique = true)]
    [Index("ClienteId", Name = "IX_OperacionPedidoVenta_ClienteID")]
    [Index("ComprobanteId", Name = "IX_OperacionPedidoVenta_ComprobanteID")]
    [Index("Filer", Name = "IX_OperacionPedidoVenta_Filer")]
    [Index("NroComprobante", Name = "IX_OperacionPedidoVenta_NroComprobante")]
    [Index("SectorId", Name = "IX_OperacionPedidoVenta_SectorID")]
    [Index("SucursalId", Name = "IX_OperacionPedidoVenta_SucursalID")]
    [Index("TalonarioId", Name = "IX_OperacionPedidoVenta_TalonarioID")]
    [Index("TransporteId", Name = "IX_OperacionPedidoVenta_TransporteID")]
    public partial class OperacionPedidoVenta
    {
        public OperacionPedidoVenta()
        {
            EncuestaRespuesta = new HashSet<EncuestaRespuesta>();
            OperacionArchivo = new HashSet<OperacionArchivo>();
            OperacionComision = new HashSet<OperacionComision>();
            OperacionDescuento = new HashSet<OperacionDescuento>();
            OperacionDetallePago = new HashSet<OperacionDetallePago>();
            OperacionImpuesto = new HashSet<OperacionImpuesto>();
            OperacionItemProducto = new HashSet<OperacionItemProducto>();
            OperacionLeyenda = new HashSet<OperacionLeyenda>();
            OperacionPedidoVentaHotelRest = new HashSet<OperacionPedidoVentaHotelRest>();
            OperacionRelacionOperacion = new HashSet<OperacionRelacionOperacion>();
            RepartoPedido = new HashSet<RepartoPedido>();
        }

        /// <summary>
        /// Tipo Movimiento al que pertenece ( 10-Indica pedido Venta)
        /// </summary>
        [Key]
        [Column("TipoOperacionID")]
        public byte TipoOperacionId { get; set; }
        /// <summary>
        /// Nro Imputacion del Pedido
        /// </summary>
        [Key]
        [Column("PedidoVentaID")]
        public int PedidoVentaId { get; set; }
        /// <summary>
        /// Nro Cliente
        /// </summary>
        [Column("ClienteID")]
        public int? ClienteId { get; set; }
        /// <summary>
        /// Fecha en que se realizo el Pedido
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime FechaComprobante { get; set; }
        /// <summary>
        /// Categoria de impuesto al que pertenece la entidad a la que realiza el pedido
        /// </summary>
        [Column("CategoriaImpuestoID")]
        public byte CategoriaImpuestoId { get; set; }
        /// <summary>
        /// Tipo de comprobante a ser  utilizado para este pediodo
        /// </summary>
        [Column("ComprobanteID")]
        public short ComprobanteId { get; set; }
        /// <summary>
        /// Nro Talonario al que pertenece la Numeracion del comprobante
        /// </summary>
        [Column("TalonarioID")]
        public short TalonarioId { get; set; }
        /// <summary>
        /// Nro de comprobante / Se repite por ComprobnateID y Nro de Punto de Venta
        /// </summary>
        public int NroComprobante { get; set; }
        /// <summary>
        /// Total Importes Sugeto a impuestos
        /// </summary>
        [Column(TypeName = "money")]
        public decimal ImporteRegistraImpuesto { get; set; }
        /// <summary>
        /// Total Importes que NO  esta sugeto a Impuesto
        /// </summary>
        [Column(TypeName = "money")]
        public decimal ImporteNoRegistraImpuesto { get; set; }
        /// <summary>
        /// Total Desuento Realizado
        /// </summary>
        [Column(TypeName = "money")]
        public decimal ImporteDescuento { get; set; }
        /// <summary>
        /// Total Importe Impuestos Suma de la Tabla OperacionImpuesto
        /// </summary>
        [Column(TypeName = "money")]
        public decimal ImporteImpuestos { get; set; }
        /// <summary>
        /// ImporteRegistraImpuesto+ImporteNoRegistraImpuesto
        /// </summary>
        [Column(TypeName = "money")]
        public decimal SubTotal { get; set; }
        /// <summary>
        /// ((ImporteRegistraImpuesto+ImporteNoRegistraImpuesto)-ImporteDescuento)+ImporteImpuestos+
        /// </summary>
        [Column(TypeName = "money")]
        public decimal TotalPedidoVenta { get; set; }
        /// <summary>
        /// Indica si el pago es deglosado (Tiene + de 1 forma de Pago)
        /// </summary>
        public bool EsPagoDetallar { get; set; }
        /// <summary>
        /// Importe total de bonificaciones realizadas en los distintos itemes de esta venta
        /// </summary>
        [Column(TypeName = "money")]
        public decimal ImpBonificacion { get; set; }
        /// <summary>
        /// Indica si se trata de Factura, Remito,Ticket
        /// </summary>
        [Column("FRT")]
        public byte Frt { get; set; }
        /// <summary>
        /// Sector en que se asento el Pedido
        /// </summary>
        [Column("SectorID")]
        public short? SectorId { get; set; }
        /// <summary>
        /// Transporte en se se Predice saldra el Pedido
        /// </summary>
        [Column("TransporteID")]
        public int? TransporteId { get; set; }
        /// <summary>
        /// Nro de Sucursal de la Empresa en que se realizo el Pedido
        /// </summary>
        [Column("SucursalID")]
        public short? SucursalId { get; set; }
        /// <summary>
        /// Indica la lista de precio a utilizar para los items q se cargan
        /// </summary>
        [Column("ListaPrecIDDefault")]
        public short? ListaPrecIddefault { get; set; }
        /// <summary>
        /// Utilizado para almacenar Informacion de Sincronizacion
        /// </summary>
        public int? Filer { get; set; }
        /// <summary>
        /// Fecha en que se realizo el Pedido
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FechaEntrega { get; set; }
        /// <summary>
        /// Usuario que registra el alta
        /// </summary>
        [Column("AlmaUserID")]
        public int? AlmaUserId { get; set; }
        /// <summary>
        /// Codigo Proyecto
        /// </summary>
        [Column("ProyectoID")]
        public short? ProyectoId { get; set; }
        /// <summary>
        /// Indica el Deposito que esta realizando el Pedido
        /// </summary>
        [Column("DepositoID")]
        public short? DepositoId { get; set; }
        /// <summary>
        /// 10-Pedido 20-Presupuesto 30-Facturacion Directa (Se toma como pedido, pero pasa a Facturacion directamente, caso de venta aguas, sodas etc)
        /// </summary>
        public byte? RegistracionTipo { get; set; }
        /// <summary>
        /// 0-No tiene 10- Pendiente Facturacion 20-Facturado
        /// </summary>
        public byte? EstadoPedido { get; set; }
        /// <summary>
        /// Indica el momento en q se realizo la reprocesacion de las notas de Pedidos generadas desde Android
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FechaHoraReproceso { get; set; }
        public bool EsMobile { get; set; }
        /// <summary>
        /// Se indica cualquier detalle y/u observacion sobre esta operacion
        /// </summary>
        [Unicode(false)]
        public string Detalle { get; set; }
        /// <summary>
        /// Codenada Ubicacuion Geografica (para determinar si el vendedor esta posicionado en el cleiten al realizar el Pedido)
        /// </summary>
        [Column(TypeName = "decimal(18, 13)")]
        public decimal? Latitud { get; set; }
        /// <summary>
        /// Codenada Ubicacuion Geografica (para determinar si el vendedor esta posicionado en el cleiten al realizar el Pedido)
        /// </summary>
        [Column(TypeName = "decimal(18, 13)")]
        public decimal? Longitud { get; set; }
        [Column("RegistroTalonarioID")]
        public int? RegistroTalonarioId { get; set; }
        [Column("MonedaID")]
        public byte? MonedaId { get; set; }
        [Column(TypeName = "money")]
        public decimal? Cotizacion { get; set; }

        [ForeignKey("AlmaUserId")]
        [InverseProperty("OperacionPedidoVenta")]
        public virtual Usuario AlmaUser { get; set; }
        [ForeignKey("ClienteId")]
        [InverseProperty("OperacionPedidoVenta")]
        public virtual Cliente Cliente { get; set; }
        [ForeignKey("DepositoId")]
        [InverseProperty("OperacionPedidoVenta")]
        public virtual Deposito Deposito { get; set; }
        [ForeignKey("ListaPrecIddefault")]
        [InverseProperty("OperacionPedidoVenta")]
        public virtual ProductoLista ListaPrecIddefaultNavigation { get; set; }
        [ForeignKey("MonedaId")]
        [InverseProperty("OperacionPedidoVenta")]
        public virtual MonedaTipo Moneda { get; set; }
        [ForeignKey("ProyectoId")]
        [InverseProperty("OperacionPedidoVenta")]
        public virtual Proyecto Proyecto { get; set; }
        [ForeignKey("RegistroTalonarioId")]
        [InverseProperty("OperacionPedidoVenta")]
        public virtual OperacionTalonarioNumeracion RegistroTalonario { get; set; }
        [ForeignKey("SectorId")]
        [InverseProperty("OperacionPedidoVenta")]
        public virtual Sector Sector { get; set; }
        [ForeignKey("SucursalId")]
        [InverseProperty("OperacionPedidoVenta")]
        public virtual Sucursal Sucursal { get; set; }
        [ForeignKey("TransporteId")]
        [InverseProperty("OperacionPedidoVenta")]
        public virtual Transporte Transporte { get; set; }
        [InverseProperty("OperacionPedidoVenta")]
        public virtual OperacionAltaModicacion OperacionAltaModicacion { get; set; }
        [InverseProperty("OperacionPedidoVenta")]
        public virtual ICollection<EncuestaRespuesta> EncuestaRespuesta { get; set; }
        [InverseProperty("OperacionPedidoVenta")]
        public virtual ICollection<OperacionArchivo> OperacionArchivo { get; set; }
        [InverseProperty("OperacionPedidoVenta")]
        public virtual ICollection<OperacionComision> OperacionComision { get; set; }
        [InverseProperty("OperacionPedidoVenta")]
        public virtual ICollection<OperacionDescuento> OperacionDescuento { get; set; }
        [InverseProperty("OperacionPedidoVenta")]
        public virtual ICollection<OperacionDetallePago> OperacionDetallePago { get; set; }
        [InverseProperty("OperacionPedidoVenta")]
        public virtual ICollection<OperacionImpuesto> OperacionImpuesto { get; set; }
        [InverseProperty("OperacionPedidoVenta")]
        public virtual ICollection<OperacionItemProducto> OperacionItemProducto { get; set; }
        [InverseProperty("OperacionPedidoVenta")]
        public virtual ICollection<OperacionLeyenda> OperacionLeyenda { get; set; }
        [InverseProperty("OperacionPedidoVenta")]
        public virtual ICollection<OperacionPedidoVentaHotelRest> OperacionPedidoVentaHotelRest { get; set; }
        [InverseProperty("OperacionPedidoVenta")]
        public virtual ICollection<OperacionRelacionOperacion> OperacionRelacionOperacion { get; set; }
        [InverseProperty("OperacionPedidoVenta")]
        public virtual ICollection<RepartoPedido> RepartoPedido { get; set; }
    }
}