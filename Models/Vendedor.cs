// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    [Index("TipoEntidadId", Name = "IX_Vendedor")]
    [Index("TipoEntidadId", "VendedorId", Name = "IX_Vendedor_1", IsUnique = true)]
    [Index("EntidadSucId", Name = "IX_Vendedor_EntidadSucID", IsUnique = true)]
    public partial class Vendedor
    {
        public Vendedor()
        {
            ClienteVendedor = new HashSet<ClienteVendedor>();
            LibroDiarioItem = new HashSet<LibroDiarioItem>();
            OperacionComision = new HashSet<OperacionComision>();
            OperacionDespacho = new HashSet<OperacionDespacho>();
            OperacionPedidoVentaWeb = new HashSet<OperacionPedidoVentaWeb>();
            OperacionRendicion = new HashSet<OperacionRendicion>();
            ProduccionOrden = new HashSet<ProduccionOrden>();
            ProductoHotelRest = new HashSet<ProductoHotelRest>();
            ProductoListaPrecioComision = new HashSet<ProductoListaPrecioComision>();
            SupervisorVendedor = new HashSet<SupervisorVendedor>();
            TransporteCargaMovimiento = new HashSet<TransporteCargaMovimiento>();
            VendedorRepresentada = new HashSet<VendedorRepresentada>();
        }

        [Column("EntidadSucID")]
        public int EntidadSucId { get; set; }
        /// <summary>
        /// Porcentaje Comicion que Percive por las Ventas
        /// </summary>
        [Column(TypeName = "decimal(7, 3)")]
        public decimal Comicion { get; set; }
        [Key]
        [Column("VendedorID")]
        public int VendedorId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime FechaAlta { get; set; }
        /// <summary>
        /// Si  supera el monto Piso  aplica comision  PorcentajePisa (si no tiene especificado utiliza la comision general Comicion)
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? MontoPiso { get; set; }
        [Column(TypeName = "decimal(7, 3)")]
        public decimal? PorcentajePiso { get; set; }
        /// <summary>
        /// Calcula comisión (0=Sobre Ventas; 1= Sobre Crédito)
        /// </summary>
        public byte? CalculaComision { get; set; }
        /// <summary>
        /// Cuenta contable representa la Comision General
        /// </summary>
        [Column("CuentaIDComisGral")]
        public int? CuentaIdcomisGral { get; set; }
        /// <summary>
        /// Cuenta contable representa la Comision sobre productos determinados
        /// </summary>
        [Column("CuentaIDComisProd")]
        public int? CuentaIdcomisProd { get; set; }
        /// <summary>
        /// Indica si esta Inhabilitado
        /// </summary>
        public bool Inhabilitado { get; set; }
        /// <summary>
        /// Viene de AlmaNET EntidadTipo utilizado para relacionar con registro de Operaciones (1)
        /// </summary>
        [Required]
        [Column("TipoEntidadID")]
        public byte? TipoEntidadId { get; set; }
        /// <summary>
        /// Permite Especificar un Nombre Independiente de la Razon Social de la Entidad
        /// </summary>
        [StringLength(50)]
        [Unicode(false)]
        public string Denominacion { get; set; }
        [StringLength(150)]
        [Unicode(false)]
        public string ContrasenaCaja { get; set; }
        public bool? EsCajero { get; set; }
        [Column("ClasificacionID")]
        public int? ClasificacionId { get; set; }
        [Column("SucursalID")]
        public short? SucursalId { get; set; }
        [Column("SectorID")]
        public short? SectorId { get; set; }

        [ForeignKey("ClasificacionId")]
        [InverseProperty("Vendedor")]
        public virtual VendedorClasificacion Clasificacion { get; set; }
        [ForeignKey("CuentaIdcomisGral")]
        [InverseProperty("VendedorCuentaIdcomisGralNavigation")]
        public virtual PlanDeCuenta CuentaIdcomisGralNavigation { get; set; }
        [ForeignKey("CuentaIdcomisProd")]
        [InverseProperty("VendedorCuentaIdcomisProdNavigation")]
        public virtual PlanDeCuenta CuentaIdcomisProdNavigation { get; set; }
        [ForeignKey("EntidadSucId")]
        [InverseProperty("Vendedor")]
        public virtual EntidadSucursal EntidadSuc { get; set; }
        [ForeignKey("SectorId")]
        [InverseProperty("Vendedor")]
        public virtual Sector Sector { get; set; }
        [ForeignKey("SucursalId")]
        [InverseProperty("Vendedor")]
        public virtual Sucursal Sucursal { get; set; }
        [InverseProperty("Vendedor")]
        public virtual ICollection<ClienteVendedor> ClienteVendedor { get; set; }
        public virtual ICollection<LibroDiarioItem> LibroDiarioItem { get; set; }
        [InverseProperty("Vendedor")]
        public virtual ICollection<OperacionComision> OperacionComision { get; set; }
        [InverseProperty("Vendedor")]
        public virtual ICollection<OperacionDespacho> OperacionDespacho { get; set; }
        [InverseProperty("Vendedor")]
        public virtual ICollection<OperacionPedidoVentaWeb> OperacionPedidoVentaWeb { get; set; }
        [InverseProperty("FiltroVendedor")]
        public virtual ICollection<OperacionRendicion> OperacionRendicion { get; set; }
        [InverseProperty("Vendedor")]
        public virtual ICollection<ProduccionOrden> ProduccionOrden { get; set; }
        [InverseProperty("Vendedor")]
        public virtual ICollection<ProductoHotelRest> ProductoHotelRest { get; set; }
        [InverseProperty("Vendedor")]
        public virtual ICollection<ProductoListaPrecioComision> ProductoListaPrecioComision { get; set; }
        [InverseProperty("Vendedor")]
        public virtual ICollection<SupervisorVendedor> SupervisorVendedor { get; set; }
        [InverseProperty("Vendedor")]
        public virtual ICollection<TransporteCargaMovimiento> TransporteCargaMovimiento { get; set; }
        [InverseProperty("Vendedor")]
        public virtual ICollection<VendedorRepresentada> VendedorRepresentada { get; set; }
    }
}