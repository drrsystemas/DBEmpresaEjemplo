// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    [Index("BancoTarjetaId", Name = "IX_BancoTarjetaHaber_BancoTarjetaID")]
    [Index("ConciliacionId", Name = "IX_BancoTarjetaHaber_ConciliacionID")]
    [Index("FechaEmision", Name = "IX_BancoTarjetaHaber_FechaEmision")]
    [Index("NroChequera", Name = "IX_BancoTarjetaHaber_NroChequera")]
    [Index("NroComprobante", Name = "IX_BancoTarjetaHaber_NroComprobante")]
    [Index("RegistroPagoId", Name = "IX_BancoTarjetaHaber_RegistroPagoID")]
    public partial class BancoTarjetaHaber
    {
        /// <summary>
        /// Cuenta de Banco o Tarjeta
        /// </summary>
        [Column("BancoTarjetaID")]
        public int BancoTarjetaId { get; set; }
        /// <summary>
        /// 101-Cheque 102-Extraccion 103-Trasnferencia Pgo. 104-Interese Pagados 105-Gastos 200-Otros
        /// </summary>
        [Column("OperacionesDebitoTipoID")]
        public byte OperacionesDebitoTipoId { get; set; }
        public int? NroComprobante { get; set; }
        /// <summary>
        /// Fecha en la que se realiza la transferencia / Deposito
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FechaEmision { get; set; }
        /// <summary>
        /// Fecha en la que el banco acredita en nuestra cuenta el Importe
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FechaAcreditacion { get; set; }
        /// <summary>
        /// Datos referidos a la realizacion del depostito o trnasferencia a nuestra cuenta
        /// </summary>
        [StringLength(250)]
        [Unicode(false)]
        public string Detalle { get; set; }
        /// <summary>
        /// Nro del registro del Pago realizado por medio de esta relacion con OperacionDetallePago se puede determinar mediante q comprobante y Operacion ingreso este debito al banco
        /// </summary>
        [Column("RegistroPagoID")]
        public int? RegistroPagoId { get; set; }
        [Key]
        [Column("RegistroID")]
        public int RegistroId { get; set; }
        [Column("TipoEntidadID")]
        public byte? TipoEntidadId { get; set; }
        [Column("RegistroEntidadID")]
        public int? RegistroEntidadId { get; set; }
        /// <summary>
        /// Importe del cheque
        /// </summary>
        [Column(TypeName = "money")]
        public decimal Importe { get; set; }
        /// <summary>
        /// Fecha de Pago (Utilizado para Cheques/Tarjetas)
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FechaPago { get; set; }
        /// <summary>
        /// Quien recibe el Cheque (a quien se paga)
        /// </summary>
        [StringLength(150)]
        [Unicode(false)]
        public string Beneficiario { get; set; }
        [Column("ConciliacionID")]
        public int? ConciliacionId { get; set; }
        public int? NroChequera { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string NroSerie { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? FechaRechazado { get; set; }
        public bool Impreso { get; set; }
        [Column("SucursalID")]
        public short? SucursalId { get; set; }
        /// <summary>
        /// Nro Talonario al que pertenece la Numeracion del comprobante
        /// </summary>
        [Column("TalonarioID")]
        public short? TalonarioId { get; set; }
        /// <summary>
        /// Inica el Registro vinculado cheque terecero q se deposito (utilizado para cuenta Banco Adm.cartera - de Cheques)
        /// </summary>
        [Column("ChequeID")]
        public int? ChequeId { get; set; }
        [Column("TipoChequeID")]
        public byte? TipoChequeId { get; set; }
        [Column("LiquidBancoID")]
        public int? LiquidBancoId { get; set; }

        [ForeignKey("BancoTarjetaId")]
        [InverseProperty("BancoTarjetaHaber")]
        public virtual BancoTarjeta BancoTarjeta { get; set; }
        [ForeignKey("ConciliacionId")]
        [InverseProperty("BancoTarjetaHaber")]
        public virtual BancoTarjetaConciliacion Conciliacion { get; set; }
        [ForeignKey("LiquidBancoId")]
        [InverseProperty("BancoTarjetaHaber")]
        public virtual BancoTarjetaHaberLiquidacion LiquidBanco { get; set; }
        [ForeignKey("NroChequera")]
        [InverseProperty("BancoTarjetaHaber")]
        public virtual Chequera NroChequeraNavigation { get; set; }
        [ForeignKey("RegistroPagoId")]
        [InverseProperty("BancoTarjetaHaber")]
        public virtual OperacionDetallePago RegistroPago { get; set; }
        [ForeignKey("SucursalId")]
        [InverseProperty("BancoTarjetaHaber")]
        public virtual Sucursal Sucursal { get; set; }
    }
}