// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    [Index("AlmaUserId", Name = "IX_OperacionCredito_AlmaUserID")]
    [Index("ClienteId", Name = "IX_OperacionCredito_ClienteID")]
    [Index("ComprobanteId", Name = "IX_OperacionCredito_ComprobanteID")]
    [Index("CreditoId", Name = "IX_OperacionCredito_CreditoID")]
    [Index("NroComprobante", Name = "IX_OperacionCredito_NroComprobante")]
    [Index("PlanPagoId", Name = "IX_OperacionCredito_PlanPagoID")]
    [Index("RegistroPagoId", Name = "IX_OperacionCredito_RegistroPagoID")]
    [Index("TalonarioId", Name = "IX_OperacionCredito_TalonarioID")]
    public partial class OperacionCredito
    {
        public OperacionCredito()
        {
            OperacionArchivo = new HashSet<OperacionArchivo>();
            OperacionCreditoCuota = new HashSet<OperacionCreditoCuota>();
        }

        /// <summary>
        /// Nro Identificador del Credito
        /// </summary>
        [Key]
        [Column("CreditoID")]
        public int CreditoId { get; set; }
        /// <summary>
        /// Nro Cliente al que se otorga el Credito
        /// </summary>
        [Column("ClienteID")]
        public int ClienteId { get; set; }
        /// <summary>
        /// Fecha en que se realizo la Operacion
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime FechaComprobante { get; set; }
        /// <summary>
        /// Tipo de comprobante utilizado
        /// </summary>
        [Column("ComprobanteID")]
        public short ComprobanteId { get; set; }
        /// <summary>
        /// Nro Talonario al que pertenece la Numeracion del comprobante
        /// </summary>
        [Column("TalonarioID")]
        public short TalonarioId { get; set; }
        /// <summary>
        /// Nro de comprobante / Se repite por ComprobnateID y TalonarioID
        /// </summary>
        public int NroComprobante { get; set; }
        /// <summary>
        /// Tipo Movimiento al que pertenece (Ventas,Compras,Pagod,Cobros) de AlmaNET.OperacionTipo
        /// </summary>
        [Key]
        [Column("TipoOperacionID")]
        public byte TipoOperacionId { get; set; }
        [Column("PlanPagoID")]
        public int? PlanPagoId { get; set; }
        /// <summary>
        /// Cantidad de Cuotas del plan.
        /// </summary>
        public byte Cuotas { get; set; }
        /// <summary>
        /// Indica si el Plan de Pago (Cuotas), se confecciona de Forma Manual
        /// </summary>
        public bool EsPlanManual { get; set; }
        /// <summary>
        /// Item Pagode de Operacion venta que genero el Credito (Importe Capital OperacionDetallePago.Importe )
        /// </summary>
        [Column("RegistroPagoID")]
        public int? RegistroPagoId { get; set; }
        /// <summary>
        /// Fecha en que fue aprobado el Crédito
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FechaAprobacion { get; set; }
        /// <summary>
        /// Sector que realizo la Venta
        /// </summary>
        [Column("SectorID")]
        public short? SectorId { get; set; }
        [Column("AlmaUserID")]
        public int? AlmaUserId { get; set; }
        [Unicode(false)]
        public string Detalle { get; set; }
        /// <summary>
        /// Indica la entidad que figura de garante de esta opercion
        /// </summary>
        [Column("EntidadIDGarante")]
        public int? EntidadIdgarante { get; set; }
        /// <summary>
        /// Importe que se cobra en concepto de gastos Administrativos
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? GastosAdministrativos { get; set; }
        /// <summary>
        /// Inteereses que se aplica sobre el capital de la operacion
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImporteIntereses { get; set; }
        /// <summary>
        /// Importe que se aplican al credito en concepto de comisiones
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImporteComisiones { get; set; }
        /// <summary>
        /// Importe q se otorga (importe del pago q genera el credito) 
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImporteCapital { get; set; }
        /// <summary>
        /// Importe total a cobrar (Suma de todas las cuotas)
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? MontoCredito { get; set; }
        /// <summary>
        /// Indico el Poretaje de interes a plicar por cada Cuota (Utilizado para planes q permite su modificacion)
        /// </summary>
        [Column(TypeName = "decimal(9, 4)")]
        public decimal? PorcIntersCuota { get; set; }
        /// <summary>
        /// Nro de Sucursal de la Empresa en que se realizo la compra
        /// </summary>
        [Column("SucursalID")]
        public short? SucursalId { get; set; }
        /// <summary>
        /// Utilizado para almacenar Informacion de Sincronizacion
        /// </summary>
        public int? Filer { get; set; }
        /// <summary>
        /// Codigo Proyecto
        /// </summary>
        [Column("ProyectoID")]
        public short? ProyectoId { get; set; }

        [ForeignKey("ClienteId")]
        [InverseProperty("OperacionCredito")]
        public virtual Cliente Cliente { get; set; }
        [ForeignKey("EntidadIdgarante")]
        [InverseProperty("OperacionCredito")]
        public virtual Entidad EntidadIdgaranteNavigation { get; set; }
        [ForeignKey("PlanPagoId")]
        [InverseProperty("OperacionCredito")]
        public virtual OperacionCreditoPlanesPago PlanPago { get; set; }
        [ForeignKey("ProyectoId")]
        [InverseProperty("OperacionCredito")]
        public virtual Proyecto Proyecto { get; set; }
        [ForeignKey("RegistroPagoId")]
        [InverseProperty("OperacionCredito")]
        public virtual OperacionDetallePago RegistroPago { get; set; }
        [ForeignKey("SucursalId")]
        [InverseProperty("OperacionCredito")]
        public virtual Sucursal Sucursal { get; set; }
        [InverseProperty("OperacionCredito")]
        public virtual OperacionAltaModicacion OperacionAltaModicacion { get; set; }
        [InverseProperty("OperacionCredito")]
        public virtual ICollection<OperacionArchivo> OperacionArchivo { get; set; }
        [InverseProperty("OperacionCredito")]
        public virtual ICollection<OperacionCreditoCuota> OperacionCreditoCuota { get; set; }
    }
}