// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    [Index("Descripcion", Name = "IX_TransporteTipoCarga_Descripcion")]
    public partial class TransporteTipoCarga
    {
        public TransporteTipoCarga()
        {
            EmpleadoVacacionesFrancos = new HashSet<EmpleadoVacacionesFrancos>();
            TransporteAutorizacionCarga = new HashSet<TransporteAutorizacionCarga>();
            TransporteCargaCierrePeriodoTipoCarga = new HashSet<TransporteCargaCierrePeriodoTipoCarga>();
            TransporteCargaConvenioColectivoDetalle = new HashSet<TransporteCargaConvenioColectivoDetalle>();
            TransporteCombustibleConsumoConductor = new HashSet<TransporteCombustibleConsumoConductor>();
            TransporteCombustibleConsumoVehiculo = new HashSet<TransporteCombustibleConsumoVehiculo>();
            TransporteCombustibleRuteo = new HashSet<TransporteCombustibleRuteo>();
            TransporteTipoCargaProducto = new HashSet<TransporteTipoCargaProducto>();
            TransporteVehiculo = new HashSet<TransporteVehiculo>();
            TransporteVehiculoTipoCarga = new HashSet<TransporteVehiculoTipoCarga>();
        }

        /// <summary>
        /// Codio tipo Carga q puede Trasnportar
        /// </summary>
        [Key]
        [Column("TipoCargaID")]
        public short TipoCargaId { get; set; }
        [Required]
        [StringLength(50)]
        [Unicode(false)]
        public string Descripcion { get; set; }
        /// <summary>
        /// Indica si el Registro de carga sólo soporta dicho tipo de carga (Ej. al asignar a un vehiculo; si el tipo de carga es Explícito; el vehículo únicamente podrá ser vinculado a cargas con productos de dicho tipo)
        /// </summary>
        public bool EsExplicito { get; set; }
        public int? Color { get; set; }
        [Column("RegistroID")]
        public int? RegistroId { get; set; }
        public byte? TipoLiquidacion { get; set; }
        [Column(TypeName = "decimal(12, 4)")]
        public decimal? CoeficienteAplicar { get; set; }

        [ForeignKey("RegistroId")]
        [InverseProperty("TransporteTipoCarga")]
        public virtual TransporteTipoCargaCalculoCc Registro { get; set; }
        [InverseProperty("TipoCarga")]
        public virtual ICollection<EmpleadoVacacionesFrancos> EmpleadoVacacionesFrancos { get; set; }
        [InverseProperty("TipoCarga")]
        public virtual ICollection<TransporteAutorizacionCarga> TransporteAutorizacionCarga { get; set; }
        [InverseProperty("TipoCarga")]
        public virtual ICollection<TransporteCargaCierrePeriodoTipoCarga> TransporteCargaCierrePeriodoTipoCarga { get; set; }
        [InverseProperty("TipoCarga")]
        public virtual ICollection<TransporteCargaConvenioColectivoDetalle> TransporteCargaConvenioColectivoDetalle { get; set; }
        [InverseProperty("TipoCarga")]
        public virtual ICollection<TransporteCombustibleConsumoConductor> TransporteCombustibleConsumoConductor { get; set; }
        [InverseProperty("TipoCarga")]
        public virtual ICollection<TransporteCombustibleConsumoVehiculo> TransporteCombustibleConsumoVehiculo { get; set; }
        [InverseProperty("TipoCarga")]
        public virtual ICollection<TransporteCombustibleRuteo> TransporteCombustibleRuteo { get; set; }
        [InverseProperty("TipoCarga")]
        public virtual ICollection<TransporteTipoCargaProducto> TransporteTipoCargaProducto { get; set; }
        [InverseProperty("TipoCarga")]
        public virtual ICollection<TransporteVehiculo> TransporteVehiculo { get; set; }
        [InverseProperty("TipoCarga")]
        public virtual ICollection<TransporteVehiculoTipoCarga> TransporteVehiculoTipoCarga { get; set; }
    }
}