// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    [Index("FamiliaCompleto", Name = "IX_ProductoFamilia", IsUnique = true)]
    [Index("Descripcion", Name = "IX_ProductoFamilia_Descripcion")]
    [Index("Orden", Name = "IX_ProductoFamilia_Orden")]
    public partial class ProductoFamilia
    {
        public ProductoFamilia()
        {
            ComisionEspecial = new HashSet<ComisionEspecial>();
            ProductoBase = new HashSet<ProductoBase>();
            Sector = new HashSet<Sector>();
        }

        /// <summary>
        /// Campo Unico Registro
        /// </summary>
        [Key]
        [Column("FamiliaID")]
        public int FamiliaId { get; set; }
        /// <summary>
        /// Nro de Familia que se le asigna (Se comienza a emumerar  de 1 a por cada Familia) nu puede repetirse el mismo numero de familia en una misma SubFamiliaDe
        /// </summary>
        public int FamiliaNro { get; set; }
        /// <summary>
        /// Refiere al nombre que tiene la Familia
        /// </summary>
        [Required]
        [StringLength(150)]
        [Unicode(false)]
        public string Descripcion { get; set; }
        /// <summary>
        /// indica la ruta completa del registro de la familia Actual Familia ejem 1.2.3
        /// </summary>
        [Required]
        [StringLength(250)]
        [Unicode(false)]
        public string FamiliaCompleto { get; set; }
        /// <summary>
        /// Indica a que tipo de familia Pertenece Se optiene de la Tabla ProductoFamilia Tipo
        /// </summary>
        [Column("TipoFamiliaID")]
        public byte TipoFamiliaId { get; set; }
        [StringLength(400)]
        public string Orden { get; set; }
        [StringLength(1500)]
        public string DescripcionFamiliaCompleto { get; set; }
        /// <summary>
        /// Cuenta Contable q reperesenta el Monto Neto/Excento de la venta
        /// </summary>
        [Column("CuentaID")]
        public int? CuentaId { get; set; }
        /// <summary>
        /// Cuenta Contable q reperesenta el Monto del Costo de la operacion
        /// </summary>
        [Column("CuentaIDCosto")]
        public int? CuentaIdcosto { get; set; }
        [Column("CuentaIDStock")]
        public int? CuentaIdstock { get; set; }
        /// <summary>
        /// Indico q utilidad se aplica a los productos de esta marca
        /// </summary>
        [Column(TypeName = "decimal(9, 4)")]
        public decimal? Utilidad { get; set; }
        /// <summary>
        /// Utilizado para indicar sincronizacion con Centralizador (IDFamilia del Centralizador)
        /// </summary>
        public int? Filer { get; set; }

        [ForeignKey("CuentaId")]
        [InverseProperty("ProductoFamiliaCuenta")]
        public virtual PlanDeCuenta Cuenta { get; set; }
        [ForeignKey("CuentaIdcosto")]
        [InverseProperty("ProductoFamiliaCuentaIdcostoNavigation")]
        public virtual PlanDeCuenta CuentaIdcostoNavigation { get; set; }
        [ForeignKey("CuentaIdstock")]
        [InverseProperty("ProductoFamiliaCuentaIdstockNavigation")]
        public virtual PlanDeCuenta CuentaIdstockNavigation { get; set; }
        [ForeignKey("TipoFamiliaId")]
        [InverseProperty("ProductoFamilia")]
        public virtual ProductoFamiliaTipo TipoFamilia { get; set; }
        [InverseProperty("Familia")]
        public virtual ICollection<ComisionEspecial> ComisionEspecial { get; set; }
        [InverseProperty("Familia")]
        public virtual ICollection<ProductoBase> ProductoBase { get; set; }
        [InverseProperty("Familia")]
        public virtual ICollection<Sector> Sector { get; set; }
    }
}