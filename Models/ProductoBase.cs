// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    /// <summary>
    /// Utilizado para Agrupar Productos que heredan de una Misma Estructura
    /// </summary>
    [Index("FamiliaId", "Inhabilitado", Name = "FamiliaInhabilitado")]
    [Index("AplicaPorSucursal", Name = "IX_ProductoBaseAplicaPorSucursal")]
    [Index("FechaModificacion", Name = "IX_ProductoBaseFechaModificacion")]
    [Index("ImgenEnBytes", Name = "IX_ProductoBaseImgenEnBytes")]
    [Index("ClasificacionId", Name = "IX_ProductoBase_ClasificacionID")]
    [Index("ControlStock", Name = "IX_ProductoBase_ControlStock")]
    [Index("ControlVencimiento", Name = "IX_ProductoBase_ControlVencimiento")]
    [Index("CuentaId", Name = "IX_ProductoBase_CuentaID")]
    [Index("CuentaIdcosto", Name = "IX_ProductoBase_CuentaIDCosto")]
    [Index("CuentaIdstock", Name = "IX_ProductoBase_CuentaIDStock")]
    [Index("DescripcionCortaBase", Name = "IX_ProductoBase_DescripcionCortaBase")]
    [Index("DescripcionLargaBase", Name = "IX_ProductoBase_DescripcionLargaBase")]
    [Index("EsVentaDepartamento", Name = "IX_ProductoBase_EsVentaDepartamento")]
    [Index("FamiliaId", Name = "IX_ProductoBase_FamiliaID")]
    [Index("FechaAlta", Name = "IX_ProductoBase_FechaAlta")]
    [Index("Inhabilitado", Name = "IX_ProductoBase_Inhabilitado")]
    [Index("MarcaId", Name = "IX_ProductoBase_MarcaID")]
    [Index("PresentacionId", Name = "IX_ProductoBase_PresentacionID")]
    [Index("ProductoTipoId", Name = "IX_ProductoBase_ProductoTipoID")]
    [Index("ProveedorPrincipalId", Name = "IX_ProductoBase_ProveedorPrincipalID")]
    [Index("SectorId", Name = "IX_ProductoBase_SectorID")]
    [Index("StockTipo", Name = "IX_ProductoBase_StockTipo")]
    public partial class ProductoBase
    {
        public ProductoBase()
        {
            Producto = new HashSet<Producto>();
            ProductoBaseImagen = new HashSet<ProductoBaseImagen>();
            ProductoCodigoActividad = new HashSet<ProductoCodigoActividad>();
            ProductoImpuesto = new HashSet<ProductoImpuesto>();
            TransporteTipoCargaProducto = new HashSet<TransporteTipoCargaProducto>();
        }

        /// <summary>
        /// Codigo Base utilizado A partir del cual se crea el Producto
        /// </summary>
        [Key]
        [Column("CodigoBaseID")]
        public int CodigoBaseId { get; set; }
        /// <summary>
        /// Descripcion Completa
        /// </summary>
        [Required]
        [StringLength(250)]
        [Unicode(false)]
        public string DescripcionLargaBase { get; set; }
        /// <summary>
        /// Codigo de Familia/Rubro al q pertenece el Producto
        /// </summary>
        [Column("FamiliaID")]
        public int? FamiliaId { get; set; }
        /// <summary>
        /// Proveedor Principal del Producto (Ojo q hay mas de un proveedor por Producto)
        /// </summary>
        [Column("ProveedorPrincipalID")]
        public int? ProveedorPrincipalId { get; set; }
        /// <summary>
        /// Detalles tecnicos del Producto
        /// </summary>
        [Unicode(false)]
        public string Observacion { get; set; }
        /// <summary>
        /// Indica si el Producto lleva un control de Stock
        /// </summary>
        public bool ControlStock { get; set; }
        /// <summary>
        /// Indica Si el producto tiene impuestos
        /// </summary>
        public bool Impuestos { get; set; }
        /// <summary>
        /// Permite destintas agrupaciones de los Productos ejem. Inverno, Verano  o Buenos, Regulares, Malos
        /// </summary>
        [Column("ClasificacionID")]
        public int? ClasificacionId { get; set; }
        /// <summary>
        /// Se optiene de AlmaNET.ProductoTipo In
        /// </summary>
        [Column("ProductoTipoID")]
        public short? ProductoTipoId { get; set; }
        /// <summary>
        /// Indica que el Producto esta inhabilitado
        /// </summary>
        public bool Inhabilitado { get; set; }
        /// <summary>
        /// Imagen del Producto
        /// </summary>
        public byte[] Imagen { get; set; }
        /// <summary>
        /// Referencia Web donde se puede optener informacion del Producto
        /// </summary>
        [StringLength(50)]
        public string ReferenciaWeb { get; set; }
        /// <summary>
        /// Codigo de la Marca a la que Pertenece el Producto
        /// </summary>
        [Column("MarcaID")]
        public int? MarcaId { get; set; }
        /// <summary>
        /// Descricion base para crear la descripcion larga del Producto
        /// </summary>
        [StringLength(50)]
        [Unicode(false)]
        public string DescripcionCortaBase { get; set; }
        /// <summary>
        /// Fecha en que se dio de alta el Producto
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime FechaAlta { get; set; }
        /// <summary>
        /// Indica el tipo de presentacion del Producto
        /// </summary>
        [Column("PresentacionID")]
        public short? PresentacionId { get; set; }
        public int? NroEnFamilia { get; set; }
        /// <summary>
        /// Dias de Vencimiento , Utilizado para pesables e informar al sincronizar con la balanza
        /// </summary>
        public short? DiasVencimiento { get; set; }
        /// <summary>
        /// Indica cuando se realizaron cambios en el Producto
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FechaModificacion { get; set; }
        /// <summary>
        /// Codigo Unico De cuenta
        /// </summary>
        [Column("CuentaID")]
        public int? CuentaId { get; set; }
        /// <summary>
        /// Cuenta Contable q reperesenta el Monto del Costo de la operacion
        /// </summary>
        [Column("CuentaIDCosto")]
        public int? CuentaIdcosto { get; set; }
        /// <summary>
        /// Indica la cantidad de Dias de Garantia q tiene asignado el producto
        /// </summary>
        public int? GarantiaDias { get; set; }
        [Column("CuentaIDStock")]
        public int? CuentaIdstock { get; set; }
        /// <summary>
        /// 0- Aplica la utilidad Asiganda en el Producto, 1-Aplica utilidad establecida en la Marca, 2- Aplica utilidad establecida en el Rubro
        /// </summary>
        public byte UtilidadAplica { get; set; }
        /// <summary>
        /// 0-No aplica 1- aplica recondeo 10ctvs, 2-aplica Redondeo 50ctvs 3-aplica redondeo de 1pso
        /// </summary>
        public byte RedondeaPrecioVenta { get; set; }
        public bool ControlVencimiento { get; set; }
        /// <summary>
        /// Indico el % de recargo a Aplicar segun UtilidadAplica al momento de actualizar el precio de venta
        /// </summary>
        [Column(TypeName = "decimal(9, 4)")]
        public decimal? PorcentajeUtilidad { get; set; }
        /// <summary>
        /// Sector en el que se utiliza el producto  (para el caso q la empresa utilice sectores para diferenciar las operaciones Ejm. Sect. Mercado, Sect Perfumeria) o Sect Consumo, Sector Fabicacion 
        /// </summary>
        [Column("SectorID")]
        public short? SectorId { get; set; }
        /// <summary>
        /// Indica la receta q se informa para productos elaborados en la Balanza
        /// </summary>
        [StringLength(500)]
        public string Receta { get; set; }
        /// <summary>
        /// Indico q si se tiene q aplicar la misma utilidad n las listas de preciso para las presentaciones (ejm Lista1 unidad y bulto xx% en ambos)
        /// </summary>
        public bool IgualUtilidadPresentaciones { get; set; }
        public byte AplicaPorSucursal { get; set; }
        [Column(TypeName = "decimal(9, 4)")]
        public decimal? CoeficienteCosto { get; set; }
        public bool? EsVentaDepartamento { get; set; }
        public short? StockTipo { get; set; }
        [Column("ImgenWEB")]
        public byte[] ImgenWeb { get; set; }
        public long? ImgenEnBytes { get; set; }

        [ForeignKey("ClasificacionId")]
        [InverseProperty("ProductoBase")]
        public virtual ProductoClasificacion Clasificacion { get; set; }
        [ForeignKey("CuentaId")]
        [InverseProperty("ProductoBaseCuenta")]
        public virtual PlanDeCuenta Cuenta { get; set; }
        [ForeignKey("CuentaIdcosto")]
        [InverseProperty("ProductoBaseCuentaIdcostoNavigation")]
        public virtual PlanDeCuenta CuentaIdcostoNavigation { get; set; }
        [ForeignKey("CuentaIdstock")]
        [InverseProperty("ProductoBaseCuentaIdstockNavigation")]
        public virtual PlanDeCuenta CuentaIdstockNavigation { get; set; }
        [ForeignKey("FamiliaId")]
        [InverseProperty("ProductoBase")]
        public virtual ProductoFamilia Familia { get; set; }
        [ForeignKey("MarcaId")]
        [InverseProperty("ProductoBase")]
        public virtual ProductoMarca Marca { get; set; }
        [ForeignKey("PresentacionId")]
        [InverseProperty("ProductoBase")]
        public virtual ProductoPresentacionTipo Presentacion { get; set; }
        [ForeignKey("ProveedorPrincipalId")]
        [InverseProperty("ProductoBase")]
        public virtual Proveedor ProveedorPrincipal { get; set; }
        [ForeignKey("SectorId")]
        [InverseProperty("ProductoBase")]
        public virtual Sector Sector { get; set; }
        [InverseProperty("CodigoBase")]
        public virtual ICollection<Producto> Producto { get; set; }
        [InverseProperty("CodigoBase")]
        public virtual ICollection<ProductoBaseImagen> ProductoBaseImagen { get; set; }
        [InverseProperty("CodigoBase")]
        public virtual ICollection<ProductoCodigoActividad> ProductoCodigoActividad { get; set; }
        [InverseProperty("CodigoBase")]
        public virtual ICollection<ProductoImpuesto> ProductoImpuesto { get; set; }
        [InverseProperty("CodigoBase")]
        public virtual ICollection<TransporteTipoCargaProducto> TransporteTipoCargaProducto { get; set; }
    }
}