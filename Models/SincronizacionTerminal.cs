// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    public partial class SincronizacionTerminal
    {
        public SincronizacionTerminal()
        {
            CuentaCorrienteRegistroTerminal = new HashSet<CuentaCorrienteRegistroTerminal>();
            DonacionInstitucion = new HashSet<DonacionInstitucion>();
            OperacionCobro = new HashSet<OperacionCobro>();
            OperacionCobroWeb = new HashSet<OperacionCobroWeb>();
            OperacionCompra = new HashSet<OperacionCompra>();
            OperacionItemProductoVentaOrdenServicio = new HashSet<OperacionItemProductoVentaOrdenServicio>();
            OperacionPago = new HashSet<OperacionPago>();
            OperacionVenta = new HashSet<OperacionVenta>();
            OperacionVentaBaucherCancelacion = new HashSet<OperacionVentaBaucherCancelacion>();
        }

        [Key]
        [Column("TerminalID")]
        public short TerminalId { get; set; }
        [Required]
        [StringLength(50)]
        public string Descripcion { get; set; }
        [Column("SQLConnection")]
        [StringLength(500)]
        public string Sqlconnection { get; set; }
        /// <summary>
        /// Indica a donde apunta la conexion  0-Conexion Servidor 1-Conexion Terminal 
        /// </summary>
        [Column("TerminalTipoID")]
        public short? TerminalTipoId { get; set; }
        public short? OrdenTransferencia { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? SincronizacionEnvio { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? SincronizacionBajada { get; set; }
        /// <summary>
        /// Indica el Nombre del equipo desde el que se tiene que realizar la sincronizacion (Ver opcion de resetear)
        /// </summary>
        [Column("PCSincroniza")]
        [StringLength(50)]
        public string Pcsincroniza { get; set; }
        [StringLength(350)]
        [Unicode(false)]
        public string ValidationString { get; set; }
        /// <summary>
        /// Indico la clave a utilizar en este punto de venta para operaciones especiales
        /// </summary>
        [StringLength(50)]
        [Unicode(false)]
        public string ClaveSupervisor { get; set; }
        /// <summary>
        /// 0-Sin Restriccione 1-Cuenta Corriente (limite Credito) 2-Descuento 4-Cambio Precios 8-Asignar precios(Venta Departamento) 16- Anular Ticket/Descuentos
        /// </summary>
        public short TipoControlSupervisor { get; set; }
        public bool EsAzure { get; set; }
        /// <summary>
        /// Nro Talonario al que pertenece la Numeracion del comprobante
        /// </summary>
        [Column("TalonarioID")]
        public short TalonarioId { get; set; }
        /// <summary>
        /// Null, Utiliza la de SQLConexion con nombre de base datos AlmaNET
        /// </summary>
        [Column("SQLConnectionAlmaNET")]
        [StringLength(500)]
        public string SqlconnectionAlmaNet { get; set; }
        [Column("EmpresaID")]
        public int? EmpresaId { get; set; }
        [Column("EsAzureAlmaNET")]
        public bool? EsAzureAlmaNet { get; set; }
        /// <summary>
        /// N° de Sucursal
        /// </summary>
        [Column("SucursalID")]
        public short? SucursalId { get; set; }
        [Column("SectorID")]
        public short? SectorId { get; set; }
        [Column(TypeName = "xml")]
        public string ConfiguracionConsultor { get; set; }
        [Column(TypeName = "xml")]
        public string ConfiguracionPuntoVenta { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? ActualizarTerminalFechaHoraDesde { get; set; }
        public byte? TipoActualizacionTerminal { get; set; }
        public int? TipoControlSupervisor2 { get; set; }
        [StringLength(20)]
        public string NroVersion { get; set; }

        [ForeignKey("EmpresaId")]
        [InverseProperty("SincronizacionTerminal")]
        public virtual EmpresaDatos Empresa { get; set; }
        [ForeignKey("SectorId")]
        [InverseProperty("SincronizacionTerminal")]
        public virtual Sector Sector { get; set; }
        [ForeignKey("SucursalId")]
        [InverseProperty("SincronizacionTerminal")]
        public virtual Sucursal Sucursal { get; set; }
        [InverseProperty("Terminal")]
        public virtual ICollection<CuentaCorrienteRegistroTerminal> CuentaCorrienteRegistroTerminal { get; set; }
        [InverseProperty("Terminal")]
        public virtual ICollection<DonacionInstitucion> DonacionInstitucion { get; set; }
        [InverseProperty("Terminal")]
        public virtual ICollection<OperacionCobro> OperacionCobro { get; set; }
        [InverseProperty("Terminal")]
        public virtual ICollection<OperacionCobroWeb> OperacionCobroWeb { get; set; }
        [InverseProperty("Terminal")]
        public virtual ICollection<OperacionCompra> OperacionCompra { get; set; }
        [InverseProperty("Terminal")]
        public virtual ICollection<OperacionItemProductoVentaOrdenServicio> OperacionItemProductoVentaOrdenServicio { get; set; }
        [InverseProperty("Terminal")]
        public virtual ICollection<OperacionPago> OperacionPago { get; set; }
        [InverseProperty("Terminal")]
        public virtual ICollection<OperacionVenta> OperacionVenta { get; set; }
        [InverseProperty("Terminal")]
        public virtual ICollection<OperacionVentaBaucherCancelacion> OperacionVentaBaucherCancelacion { get; set; }
    }
}