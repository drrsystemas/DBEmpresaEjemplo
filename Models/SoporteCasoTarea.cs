// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    [Index("TipoOperacionId", "TareaId", Name = "IX_SoporteCasoTarea", IsUnique = true)]
    [Index("CasoId", Name = "IX_SoporteCasoTarea_CasoID")]
    [Index("EtapaId", Name = "IX_SoporteCasoTarea_EtapaID")]
    [Index("TecnicoSoporteId", Name = "IX_SoporteCasoTarea_TecnicoSoporteID")]
    public partial class SoporteCasoTarea
    {
        public SoporteCasoTarea()
        {
            OperacionArchivo = new HashSet<OperacionArchivo>();
            SoporteAbonoCasoTarea = new HashSet<SoporteAbonoCasoTarea>();
        }

        [Key]
        [Column("TareaID")]
        public int TareaId { get; set; }
        [Column("CasoID")]
        public int CasoId { get; set; }
        /// <summary>
        /// Indica la etapa a la que pertecece la tarea dentro del caso
        /// </summary>
        [Column("EtapaID")]
        public short? EtapaId { get; set; }
        [Column("TecnicoSoporteID")]
        public int? TecnicoSoporteId { get; set; }
        /// <summary>
        /// CONTINUAR -- Usuario Sistema
        /// </summary>
        [Column("AlmaUserID")]
        public int AlmaUserId { get; set; }
        /// <summary>
        /// Fecha estipulada / Agendada para comenzar
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FechaHoraAsigando { get; set; }
        /// <summary>
        /// Fecha q se comenzo a dar soporte efectivo
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FechaHoraInicio { get; set; }
        /// <summary>
        /// Fecha y hora en q se completo efectivamente
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FechaHoraCompletado { get; set; }
        /// <summary>
        /// Detalle Eventa
        /// </summary>
        [Unicode(false)]
        public string DescripcionResolucion { get; set; }
        /// <summary>
        /// Item detalle Venta con el fue Facturado, Permite derterminar si fue facturado
        /// </summary>
        [Column("ItemID")]
        public int? ItemId { get; set; }
        /// <summary>
        /// Indico ID Registro Evento Calendar
        /// </summary>
        [StringLength(150)]
        [Unicode(false)]
        public string Filer { get; set; }
        /// <summary>
        /// Indica tipo concepto a facturar del Tecnico DeafultCodigoID o de la tabla SoporteTecnicoServicios
        /// </summary>
        [Column("CodigoID")]
        public int? CodigoId { get; set; }
        /// <summary>
        /// Importe neto (Sin impuesto del trabajo)
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImporteNeto { get; set; }
        /// <summary>
        /// Indica si la Tarea se factura (Para el caso de los abonados no Factura)
        /// </summary>
        public bool SeFactura { get; set; }
        /// <summary>
        /// Indicar de 1 a 10 (la prioridad del caso ) solo acceptar valores de 0 al 10
        /// </summary>
        [Column("PrioridadID")]
        public byte PrioridadId { get; set; }
        /// <summary>
        /// Indica la cantidad de min. facturado/CONSUMIDO (minimo y/o diferencia, Inicio y completado, en caso de no alcanzar minimo)
        /// </summary>
        [Column(TypeName = "decimal(9, 3)")]
        public decimal? CantidadFacturado { get; set; }
        /// <summary>
        /// Tipo Movimiento al que pertenece (Ventas,Compras,Pagod,Cobros) de AlmaNET.OperacionTipo
        /// </summary>
        [Column("TipoOperacionID")]
        public byte TipoOperacionId { get; set; }
        [StringLength(110)]
        public string DescripcionTarea { get; set; }
        [Column("SectorID")]
        public short? SectorId { get; set; }
        [Column("SucursalID")]
        public short? SucursalId { get; set; }
        [Column(TypeName = "decimal(7, 2)")]
        public decimal? PorcentajeComision { get; set; }

        [ForeignKey("CasoId")]
        [InverseProperty("SoporteCasoTarea")]
        public virtual SoporteCaso Caso { get; set; }
        [ForeignKey("EtapaId")]
        [InverseProperty("SoporteCasoTarea")]
        public virtual SoporteTareasEtapas Etapa { get; set; }
        [ForeignKey("ItemId")]
        [InverseProperty("SoporteCasoTarea")]
        public virtual OperacionItemProducto Item { get; set; }
        [ForeignKey("TecnicoSoporteId")]
        [InverseProperty("SoporteCasoTarea")]
        public virtual SoporteTecnico TecnicoSoporte { get; set; }
        public virtual ICollection<OperacionArchivo> OperacionArchivo { get; set; }
        [InverseProperty("Tarea")]
        public virtual ICollection<SoporteAbonoCasoTarea> SoporteAbonoCasoTarea { get; set; }
    }
}