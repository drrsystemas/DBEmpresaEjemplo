// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    [Index("AvisoTipoId", Name = "IX_Evento_AvisoTipoID")]
    [Index("EventoClasificId", Name = "IX_Evento_EventoClasificID")]
    [Index("EventoPeriodicoId", Name = "IX_Evento_EventoPeriodicoID")]
    [Index("EventoPrioridId", Name = "IX_Evento_EventoPrioridID")]
    public partial class Evento
    {
        public Evento()
        {
            EntidadSucursalEvento = new HashSet<EntidadSucursalEvento>();
            EventoColaboradores = new HashSet<EventoColaboradores>();
            EventoMantenimiento = new HashSet<EventoMantenimiento>();
            ImpuestoFormularioLiquidacion = new HashSet<ImpuestoFormularioLiquidacion>();
            ServisProcesos = new HashSet<ServisProcesos>();
            TransporteVehiculoEvento = new HashSet<TransporteVehiculoEvento>();
        }

        /// <summary>
        /// En caso de q avisoTipoID =0 ==&gt; EventoPeriodicoID=RegEventoID
        /// </summary>
        [Column("EventoPeriodicoID")]
        public int EventoPeriodicoId { get; set; }
        /// <summary>
        /// 0-Indica q no tiene periodicidad 10-Es un Evento Diario, 20-Evento Semananl, 30-Evento Mensual , 40-Evento Anual
        /// </summary>
        [Column("AvisoTipoID")]
        public byte? AvisoTipoId { get; set; }
        [Key]
        [Column("RegEventoID")]
        public int RegEventoId { get; set; }
        [Required]
        [Unicode(false)]
        public string Detalle { get; set; }
        public bool Avisar { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime FechaInicio { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime FechaFinal { get; set; }
        public bool TodoElDia { get; set; }
        /// <summary>
        /// Me permite Clasificar los evento y asignarle un Color distinto segun su Clasificacion
        /// </summary>
        [Column("EventoClasificID")]
        public short? EventoClasificId { get; set; }
        /// <summary>
        /// Indica la Importancia del Evento(Ejem. Alta, Normal, Baja, nionguna)
        /// </summary>
        [Column("EventoPrioridID")]
        public byte? EventoPrioridId { get; set; }
        /// <summary>
        /// Se Indica para q Usuario de Alma Eesta asiganado el Evento
        /// </summary>
        [Column("AlmaUserID")]
        public int AlmaUserId { get; set; }
        /// <summary>
        /// Indica la Fecha en q se Realixo
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FechaCompletado { get; set; }
        /// <summary>
        /// Indica si se cancelo
        /// </summary>
        public bool? Cancelado { get; set; }
        /// <summary>
        /// Indica en que RegEventoID se reprogramo el Evento
        /// </summary>
        [Column("ReprogramadoID")]
        public int? ReprogramadoId { get; set; }
        /// <summary>
        /// Indica la Fecha y hora q se debe emitir el aviso del Evento
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FechaHoraAviso { get; set; }
        [Column("FechaYHoraCreacion", TypeName = "datetime")]
        public DateTime FechaYhoraCreacion { get; set; }
        /// <summary>
        /// Se Indica para q Usuario de Alma que REGISTRO el Evento
        /// </summary>
        [Column("RegistroAlmaUserID")]
        public int? RegistroAlmaUserId { get; set; }
        /// <summary>
        /// Relaciona con ID de Google Calendar
        /// </summary>
        [StringLength(50)]
        [Unicode(false)]
        public string Filer { get; set; }
        [StringLength(500)]
        [Unicode(false)]
        public string Titulo { get; set; }
        [StringLength(150)]
        [Unicode(false)]
        public string Ubicacion { get; set; }
        [StringLength(250)]
        [Unicode(false)]
        public string Referencia { get; set; }
        [Column("SectorID")]
        public short? SectorId { get; set; }
        [Column("SucursalID")]
        public short? SucursalId { get; set; }
        [Column("ProyectoID")]
        public short? ProyectoId { get; set; }

        [ForeignKey("AlmaUserId")]
        [InverseProperty("EventoAlmaUser")]
        public virtual Usuario AlmaUser { get; set; }
        public virtual EventoAnual EventoAnual { get; set; }
        [ForeignKey("EventoClasificId")]
        [InverseProperty("Evento")]
        public virtual EventoClasificacion EventoClasific { get; set; }
        public virtual EventoDiario EventoDiario { get; set; }
        public virtual EventoMensual EventoMensual { get; set; }
        [ForeignKey("EventoPrioridId")]
        [InverseProperty("Evento")]
        public virtual EventoPrioridad EventoPriorid { get; set; }
        public virtual EventoSemanal EventoSemanal { get; set; }
        [ForeignKey("ProyectoId")]
        [InverseProperty("Evento")]
        public virtual Proyecto Proyecto { get; set; }
        [ForeignKey("RegistroAlmaUserId")]
        [InverseProperty("EventoRegistroAlmaUser")]
        public virtual Usuario RegistroAlmaUser { get; set; }
        [ForeignKey("SectorId")]
        [InverseProperty("Evento")]
        public virtual Sector Sector { get; set; }
        [ForeignKey("SucursalId")]
        [InverseProperty("Evento")]
        public virtual Sucursal Sucursal { get; set; }
        [InverseProperty("RegEvento")]
        public virtual ICollection<EntidadSucursalEvento> EntidadSucursalEvento { get; set; }
        [InverseProperty("RegEvento")]
        public virtual ICollection<EventoColaboradores> EventoColaboradores { get; set; }
        [InverseProperty("RegEvento")]
        public virtual ICollection<EventoMantenimiento> EventoMantenimiento { get; set; }
        [InverseProperty("RegEvento")]
        public virtual ICollection<ImpuestoFormularioLiquidacion> ImpuestoFormularioLiquidacion { get; set; }
        [InverseProperty("RegEvento")]
        public virtual ICollection<ServisProcesos> ServisProcesos { get; set; }
        [InverseProperty("RegEvento")]
        public virtual ICollection<TransporteVehiculoEvento> TransporteVehiculoEvento { get; set; }
    }
}