// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    [Index("FechaCierre", Name = "IX_OperacionVentaCierreZ_FechaCierre")]
    [Index("Znro", Name = "IX_OperacionVentaCierreZ_ZNro")]
    public partial class OperacionVentaCierreZ
    {
        public OperacionVentaCierreZ()
        {
            OperacionVenta = new HashSet<OperacionVenta>();
        }

        [Key]
        [Column("CierreZ_ID")]
        public int CierreZId { get; set; }
        [Column("ZNro")]
        public short Znro { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime FechaCierre { get; set; }
        public short NroPuntoVenta { get; set; }
        [Column(TypeName = "money")]
        public decimal MontoTotal { get; set; }
        [Column(TypeName = "money")]
        public decimal TotalIvaVentas { get; set; }
        public short TicketsCancelados { get; set; }
        public short DocNoFiscalHomol { get; set; }
        public short DocNoFiscales { get; set; }
        public short CantTicketsB { get; set; }
        public short CantTicketsA { get; set; }
        /// <summary>
        /// Ultimo Ticket, lleva una numeracion distinta al Ticket/B
        /// </summary>
        public int? UltimoTicket { get; set; }
        public int UltimoTicketB { get; set; }
        public int UltimoTicketA { get; set; }
        [Column(TypeName = "money")]
        public decimal Percepciones { get; set; }
        public bool GeneraAsiento { get; set; }
        [Column(TypeName = "money")]
        public decimal ImpExento { get; set; }
        /// <summary>
        /// Ultimo nota Credito TICKET
        /// </summary>
        public int? UltimoNotCredTick { get; set; }
        /// <summary>
        /// Ultimo Nr Nota de Credito B
        /// </summary>
        [Column("UltimaNotCred_B")]
        public int? UltimaNotCredB { get; set; }
        /// <summary>
        /// Ultimo Nr Nota de Credito A
        /// </summary>
        [Column("UltimaNotCred_A")]
        public int? UltimaNotCredA { get; set; }
        /// <summary>
        /// Ultimo Notata Debito Tiket
        /// </summary>
        public int? UltimoNotDebTick { get; set; }
        /// <summary>
        /// Ultimo Nr Nota de Debito B
        /// </summary>
        [Column("UltimaNotDeb_B")]
        public int? UltimaNotDebB { get; set; }
        /// <summary>
        /// Ultimo Nr Nota de Debito A
        /// </summary>
        [Column("UltimaNotDeb_A")]
        public int? UltimaNotDebA { get; set; }
        /// <summary>
        /// Importe Nota de Credito
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImporteNotCred { get; set; }
        /// <summary>
        /// Importe IVA en las Nota de Credito
        /// </summary>
        [Column("IVANotCred", TypeName = "money")]
        public decimal? IvanotCred { get; set; }
        /// <summary>
        /// Importe de venta Exenta de Impuestos en notas de credito
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ExentoNotCred { get; set; }
        /// <summary>
        /// Importe de las Percepciones globales realizadas en las notas de credito
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? PercepNotCre { get; set; }
        /// <summary>
        /// Sector que realizo la Venta
        /// </summary>
        [Column("SectorID")]
        public short? SectorId { get; set; }
        /// <summary>
        /// Nro de Sucursal de la Empresa q realizo la venta
        /// </summary>
        [Column("SucursalID")]
        public short? SucursalId { get; set; }
        /// <summary>
        /// Nro de transaccion afip q se optiene al informar las ventas controlador Fiscal 2da Generacion
        /// </summary>
        [Column("NroTransaccionAFIP")]
        public long? NroTransaccionAfip { get; set; }
        public int? CantidadTicket { get; set; }
        [Column(TypeName = "decimal(14, 4)")]
        public decimal? Descuentos { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? FechaRealizado { get; set; }
        [StringLength(250)]
        [Unicode(false)]
        public string Detalle { get; set; }

        [ForeignKey("SectorId")]
        [InverseProperty("OperacionVentaCierreZ")]
        public virtual Sector Sector { get; set; }
        [ForeignKey("SucursalId")]
        [InverseProperty("OperacionVentaCierreZ")]
        public virtual Sucursal Sucursal { get; set; }
        [InverseProperty("CierreZ")]
        public virtual ICollection<OperacionVenta> OperacionVenta { get; set; }
    }
}