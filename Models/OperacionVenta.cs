// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    [Index("ComprobanteId", "NroComprobante", "SucursalId", "TalonarioId", Name = "ComprobanteSucursal")]
    [Index("ComprobanteId", "TalonarioId", "TipoOperacionId", Name = "ControlTalonarios")]
    [Index("ComprobanteId", "TalonarioId", "CaeaId", Name = "IX_ComprobanteIDTalonarioIDCAEA_ID2")]
    [Index("TerminalId", Name = "IX_OperacionVenta")]
    [Index("FechaDevengado", Name = "IX_OperacionVentaFechaDevengado")]
    [Index("CierreZId", Name = "IX_OperacionVenta_CierrteZ_ID")]
    [Index("ClienteId", Name = "IX_OperacionVenta_ClienteID")]
    [Index("ComprobanteId", Name = "IX_OperacionVenta_ComprobanteID")]
    [Index("FechaComprobante", Name = "IX_OperacionVenta_FechaComprobante")]
    [Index("FechaImputacion", Name = "IX_OperacionVenta_FechaImputacion")]
    [Index("FechaVencimiento", Name = "IX_OperacionVenta_FechaVencimiento")]
    [Index("Filer", Name = "IX_OperacionVenta_Filer")]
    [Index("VentaId", Name = "IX_OperacionVenta_OperacionVenta", IsUnique = true)]
    [Index("ProyectoId", Name = "IX_OperacionVenta_ProyectoID")]
    [Index("RetirarDespositoId", Name = "IX_OperacionVenta_RetirarDespositoID")]
    [Index("SectorId", Name = "IX_OperacionVenta_SectorID")]
    [Index("SucursalId", Name = "IX_OperacionVenta_SucursalID")]
    [Index("SucursalId", "TalonarioId", "FechaImputacion", Name = "IX_OperacionVenta_SucursalTalonarioFecha")]
    [Index("TalonarioId", Name = "IX_OperacionVenta_TalonarioID")]
    [Index("TipoOperacionId", Name = "IX_OperacionVenta_TipoOperacionID")]
    [Index("TotalVenta", Name = "IX_OperacionVenta_TotalVenta")]
    [Index("VentaId", Name = "IX_OperacionVenta_VentaID", IsUnique = true)]
    [Index("NroComprobante", "FechaComprobante", Name = "NroComprobanteFecha")]
    [Index("TalonarioId", "ComprobanteId", "CaeaId", Name = "OperacionVentaTalonariComprobanteCAEA")]
    [Index("ClienteId", "FechaImputacion", Name = "OperacionVenta_ClienteIDFechaImputacion")]
    [Index("SucursalId", "TalonarioId", "FechaImputacion", Name = "OperacionVenta_SucursTalonarioFecha")]
    [Index("ResumenId", "SucursalId", "FechaImputacion", Name = "ResumenIDSucursalIDFechaImputacion")]
    public partial class OperacionVenta
    {
        public OperacionVenta()
        {
            OperacionArchivo = new HashSet<OperacionArchivo>();
            OperacionCobroWebItem = new HashSet<OperacionCobroWebItem>();
            OperacionComision = new HashSet<OperacionComision>();
            OperacionDescuento = new HashSet<OperacionDescuento>();
            OperacionDetallePago = new HashSet<OperacionDetallePago>();
            OperacionEntrega = new HashSet<OperacionEntrega>();
            OperacionImpuesto = new HashSet<OperacionImpuesto>();
            OperacionImpuestoZona = new HashSet<OperacionImpuestoZona>();
            OperacionImputacion = new HashSet<OperacionImputacion>();
            OperacionItemProducto = new HashSet<OperacionItemProducto>();
            OperacionLeyenda = new HashSet<OperacionLeyenda>();
            OperacionRelacionOperacionOperacionVenta = new HashSet<OperacionRelacionOperacion>();
            OperacionRelacionOperacionOperacionVentaNavigation = new HashSet<OperacionRelacionOperacion>();
            OperacionRendicionDetalle = new HashSet<OperacionRendicionDetalle>();
            OperacionRetencionFacturas = new HashSet<OperacionRetencionFacturas>();
            OperacionTransporte = new HashSet<OperacionTransporte>();
            OperacionVentaBaucher = new HashSet<OperacionVentaBaucher>();
            RepartoPedido = new HashSet<RepartoPedido>();
            RepartoRendicion = new HashSet<RepartoRendicion>();
            UnidadFacturacionPeriodoVentas = new HashSet<UnidadFacturacionPeriodoVentas>();
        }

        /// <summary>
        /// Tipo Movimiento al que pertenece (Ventas,Compras,Pagod,Cobros) de AlmaNET.OperacionTipo
        /// </summary>
        [Key]
        [Column("TipoOperacionID")]
        public byte TipoOperacionId { get; set; }
        /// <summary>
        /// Nro Imputacion de la Venta
        /// </summary>
        [Key]
        [Column("VentaID")]
        public int VentaId { get; set; }
        /// <summary>
        /// Nro Cliente
        /// </summary>
        [Column("ClienteID")]
        public int? ClienteId { get; set; }
        /// <summary>
        /// Fecha en que se realizo la Venta
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime FechaComprobante { get; set; }
        /// <summary>
        /// Categoria de impuesto al que pertenece la entidad a la que se realizo la Venta
        /// </summary>
        [Column("CategoriaImpuestoID")]
        public byte CategoriaImpuestoId { get; set; }
        /// <summary>
        /// Tipo de comprobante utilizado para la venta
        /// </summary>
        [Column("ComprobanteID")]
        public short ComprobanteId { get; set; }
        /// <summary>
        /// Nro Talonario al que pertenece la Numeracion del comprobante
        /// </summary>
        [Column("TalonarioID")]
        public short TalonarioId { get; set; }
        /// <summary>
        /// Nro de comprobante / Se repite por ComprobnateID y Nro de Punto de Venta
        /// </summary>
        public int NroComprobante { get; set; }
        /// <summary>
        /// Total Importes Sugeto a impuestos netos
        /// </summary>
        [Column(TypeName = "money")]
        public decimal ImporteRegistraImpuesto { get; set; }
        /// <summary>
        /// Total Importes que no registra Impuesto Exento+ImpuestoInternos
        /// </summary>
        [Column(TypeName = "money")]
        public decimal ImporteNoRegistraImpuesto { get; set; }
        /// <summary>
        /// Total Desuento Realizado Importe Descuento
        /// </summary>
        [Column(TypeName = "money")]
        public decimal ImporteDescuento { get; set; }
        /// <summary>
        /// Total Importe Impuestos IVA Rentas, Percepciones
        /// </summary>
        [Column(TypeName = "money")]
        public decimal ImporteImpuestos { get; set; }
        /// <summary>
        /// ImporteRegistraImpuesto+ImporteNoRegistraImpuesto
        /// </summary>
        [Column(TypeName = "money")]
        public decimal SubTotal { get; set; }
        /// <summary>
        /// ((ImporteRegistraImpuesto+ImporteNoRegistraImpuesto)-ImporteDescuento)+ImporteImpuestos+
        /// </summary>
        [Column(TypeName = "money")]
        public decimal TotalVenta { get; set; }
        /// <summary>
        /// Indica si el pago es deglosado (Tiene + de 1 forma de Pago)
        /// </summary>
        public bool EsPagoDetallar { get; set; }
        /// <summary>
        /// Importe total de bonificaciones realizadas en los distintos itemes de esta venta
        /// </summary>
        [Column(TypeName = "money")]
        public decimal ImpBonificacion { get; set; }
        /// <summary>
        /// Tipo Detalle que se viusliza por defecto en esta Venta
        /// </summary>
        public byte TipoDetalle { get; set; }
        /// <summary>
        /// Indica si se trata de Factura, Remito,Ticket  10-Factura 20-TicketFiscal  30-Remito  100-(FR-Factura sobre Remito)  (REMITO Indica que el comprobante cumpre la Funcion de  Traslado Mercaderias, no suma a la cuenta corriente)
        /// </summary>
        [Column("FRT")]
        public byte Frt { get; set; }
        /// <summary>
        /// Sector que realizo la Venta
        /// </summary>
        [Column("SectorID")]
        public short? SectorId { get; set; }
        /// <summary>
        /// Fecha imputacion COntable
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime FechaImputacion { get; set; }
        /// <summary>
        /// Nro de cierre z al que pertenece el ticket
        /// </summary>
        [Column("CierreZ_ID")]
        public int? CierreZId { get; set; }
        /// <summary>
        /// Indica si la operacion registra asiento contable
        /// </summary>
        public bool GeneraAsiento { get; set; }
        /// <summary>
        /// Nro de Sucursal de la Empresa q realizo la venta
        /// </summary>
        [Column("SucursalID")]
        public short? SucursalId { get; set; }
        /// <summary>
        /// Codigo Proyecto
        /// </summary>
        [Column("ProyectoID")]
        public short? ProyectoId { get; set; }
        /// <summary>
        /// Nro de Resmun de Operaciones, una vez que tena asignado un nro de Resumen Operacion, esta operacion no se debera poder modificar solo en caso de que el operador posee un nivel para realizarlo
        /// </summary>
        [Column("ResumenID")]
        public int? ResumenId { get; set; }
        /// <summary>
        /// Fecha en q produce el movimiento de stock
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FerchaStock { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? FechaVencimiento { get; set; }
        /// <summary>
        /// Tipo de Moneda en que se realizo la Venta
        /// </summary>
        [Column("MonedaID")]
        public byte? MonedaId { get; set; }
        /// <summary>
        /// Cotizacion a la Fecha de la Moneda
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? Cotizacion { get; set; }
        [Column("TipoAjusteID")]
        public byte? TipoAjusteId { get; set; }
        public byte? TipoNroIdentificacion { get; set; }
        public long? NroIdentificacion { get; set; }
        [Column("CAEA_ID")]
        public int? CaeaId { get; set; }
        [Column("VentaExportacionID")]
        public int? VentaExportacionId { get; set; }
        /// <summary>
        /// 0-No tiene Ninguna Impresion 1-Impresion Fiscal 2-Genero Factura Electronica 10-Impresion Generica
        /// </summary>
        public byte? FueImpreso { get; set; }
        /// <summary>
        /// Indica la cantidad de copias que se ralizaron (Impresiopnes, Generaciones)
        /// </summary>
        public byte? CantCopiaRealizadas { get; set; }
        /// <summary>
        /// Datos Adicionales,, utilizado como tag, para almacenar informacion de sincronizacion con otros sistemas
        /// </summary>
        public int? Filer { get; set; }
        [Column("AlmaUserID")]
        public int? AlmaUserId { get; set; }
        /// <summary>
        /// Indica el desposito a Retirar la venta, * Ver tambien especificar de forma individual por Item
        /// </summary>
        [Column("RetirarDespositoID")]
        public short? RetirarDespositoId { get; set; }
        /// <summary>
        /// Se indica cualquier detalle y/u observacion sobre esta operacion
        /// </summary>
        [Unicode(false)]
        public string Detalle { get; set; }
        [Column(TypeName = "date")]
        public DateTime? FechaDevengado { get; set; }
        [Column("TerminalID")]
        public short? TerminalId { get; set; }
        /// <summary>
        /// Indica tipo comprobante  10-Pre-impreso 20-Fiscal1    30-Electonico   40-Fiscal2
        /// </summary>
        [Column("ComprobanteTipoID")]
        public byte? ComprobanteTipoId { get; set; }
        public bool Sincronisar { get; set; }
        [Column("RegistroTipoID")]
        public byte? RegistroTipoId { get; set; }

        [ForeignKey("AlmaUserId")]
        [InverseProperty("OperacionVenta")]
        public virtual Usuario AlmaUser { get; set; }
        [ForeignKey("CaeaId")]
        [InverseProperty("OperacionVenta")]
        public virtual OperacionVentaCaea Caea { get; set; }
        [ForeignKey("CierreZId")]
        [InverseProperty("OperacionVenta")]
        public virtual OperacionVentaCierreZ CierreZ { get; set; }
        [ForeignKey("ClienteId")]
        [InverseProperty("OperacionVenta")]
        public virtual Cliente Cliente { get; set; }
        [ForeignKey("ProyectoId")]
        [InverseProperty("OperacionVenta")]
        public virtual Proyecto Proyecto { get; set; }
        [ForeignKey("ResumenId")]
        [InverseProperty("OperacionVenta")]
        public virtual OperacionResumen Resumen { get; set; }
        [ForeignKey("RetirarDespositoId")]
        [InverseProperty("OperacionVenta")]
        public virtual Deposito RetirarDesposito { get; set; }
        [ForeignKey("SectorId")]
        [InverseProperty("OperacionVenta")]
        public virtual Sector Sector { get; set; }
        [ForeignKey("SucursalId")]
        [InverseProperty("OperacionVenta")]
        public virtual Sucursal Sucursal { get; set; }
        [ForeignKey("TerminalId")]
        [InverseProperty("OperacionVenta")]
        public virtual SincronizacionTerminal Terminal { get; set; }
        [ForeignKey("VentaExportacionId")]
        [InverseProperty("OperacionVenta")]
        public virtual OperacionVentaExportacion VentaExportacion { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual LibroDiario LibroDiario { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual OperacionAltaModicacion OperacionAltaModicacion { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionArchivo> OperacionArchivo { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionCobroWebItem> OperacionCobroWebItem { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionComision> OperacionComision { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionDescuento> OperacionDescuento { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionDetallePago> OperacionDetallePago { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionEntrega> OperacionEntrega { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionImpuesto> OperacionImpuesto { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionImpuestoZona> OperacionImpuestoZona { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionImputacion> OperacionImputacion { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionItemProducto> OperacionItemProducto { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionLeyenda> OperacionLeyenda { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionRelacionOperacion> OperacionRelacionOperacionOperacionVenta { get; set; }
        [InverseProperty("OperacionVentaNavigation")]
        public virtual ICollection<OperacionRelacionOperacion> OperacionRelacionOperacionOperacionVentaNavigation { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionRendicionDetalle> OperacionRendicionDetalle { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionRetencionFacturas> OperacionRetencionFacturas { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionTransporte> OperacionTransporte { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<OperacionVentaBaucher> OperacionVentaBaucher { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<RepartoPedido> RepartoPedido { get; set; }
        [InverseProperty("OperacionVenta")]
        public virtual ICollection<RepartoRendicion> RepartoRendicion { get; set; }
        public virtual ICollection<UnidadFacturacionPeriodoVentas> UnidadFacturacionPeriodoVentas { get; set; }
    }
}