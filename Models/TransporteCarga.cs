// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    /// <summary>
    /// Aca se registran las guias
    /// </summary>
    [Index("ClienteId", "EstadoCargaId", Name = "IX_TransporteCargaClienteIDEst")]
    [Index("AlmaUserId", Name = "IX_TransporteCarga_AlmaUserID")]
    [Index("CargaId", Name = "IX_TransporteCarga_CargaID", IsUnique = true)]
    [Index("ClienteId", Name = "IX_TransporteCarga_ClienteID")]
    [Index("DepositoIdingresa", Name = "IX_TransporteCarga_DepositoIDIngresa")]
    [Index("DepositoIdsale", Name = "IX_TransporteCarga_DepositoIDSale")]
    [Index("DestinoId", Name = "IX_TransporteCarga_DestinoID")]
    [Index("EntidadSucIddestino", Name = "IX_TransporteCarga_EntidadSucIDDestino")]
    [Index("EntidadSucIdorigen", Name = "IX_TransporteCarga_EntidadSucIDOrigen")]
    [Index("EstadoCargaId", Name = "IX_TransporteCarga_EstadoCargaID")]
    [Index("FacturaEstadoId", Name = "IX_TransporteCarga_FacturaEstadoID")]
    [Index("FechaArealizar", Name = "IX_TransporteCarga_FechaARealizar")]
    [Index("FechaAlta", Name = "IX_TransporteCarga_FechaAlta")]
    [Index("FechaCompletado", Name = "IX_TransporteCarga_FechaCompletado")]
    [Index("FleteEstadoId", Name = "IX_TransporteCarga_FleteEstadoID")]
    [Index("NroComprobante", Name = "IX_TransporteCarga_NroComprobante")]
    [Index("ProductoPrecioId", Name = "IX_TransporteCarga_ProductoPrecioID")]
    [Index("SucursalId", Name = "IX_TransporteCarga_SucursalID")]
    [Index("TipoOperacionId", Name = "IX_TransporteCarga_TipoOperacionID")]
    [Index("TraspViajeId", Name = "IX_TransporteCarga_TraspViajeID")]
    public partial class TransporteCarga
    {
        public TransporteCarga()
        {
            OperacionArchivo = new HashSet<OperacionArchivo>();
            TransporteAutorizacionCargaDetalleTransporteCarga = new HashSet<TransporteAutorizacionCargaDetalleTransporteCarga>();
            TransporteAutorizacionRemito = new HashSet<TransporteAutorizacionRemito>();
            TransporteCargaConceptosAdicionales = new HashSet<TransporteCargaConceptosAdicionales>();
            TransporteCargaMovimientoDetalle = new HashSet<TransporteCargaMovimientoDetalle>();
            TransporteCrt = new HashSet<TransporteCrt>();
            TransproteCargaRemitos = new HashSet<TransproteCargaRemitos>();
        }

        /// <summary>
        /// Nro De Guia
        /// </summary>
        [Key]
        [Column("CargaID")]
        public int CargaId { get; set; }
        [Column("ProductoPrecioID")]
        public int ProductoPrecioId { get; set; }
        [Column(TypeName = "money")]
        public decimal TarifaUnidad { get; set; }
        [Column(TypeName = "decimal(13, 2)")]
        public decimal? Cantidad { get; set; }
        [Column("ClienteID")]
        public int? ClienteId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime FechaAlta { get; set; }
        [Column("DestinoID")]
        public int DestinoId { get; set; }
        [Column("OrigenID")]
        public int OrigenId { get; set; }
        [Column("TraspViajeID")]
        public int TraspViajeId { get; set; }
        [Column("EntidadSucIDDestino")]
        public int? EntidadSucIddestino { get; set; }
        [Column("EntidadSucIDOrigen")]
        public int? EntidadSucIdorigen { get; set; }
        [Column("FechaARealizar", TypeName = "datetime")]
        public DateTime? FechaArealizar { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? FechaCompletado { get; set; }
        [Column("EstadoCargaID")]
        public short EstadoCargaId { get; set; }
        [Unicode(false)]
        public string Obserbacion { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? FechaSolicitud { get; set; }
        [Column("FacturaEstadoID")]
        public int? FacturaEstadoId { get; set; }
        [Column("FleteEstadoID")]
        public int? FleteEstadoId { get; set; }
        [Column(TypeName = "money")]
        public decimal? TotalConceptos { get; set; }
        [Column(TypeName = "money")]
        public decimal? TotalCarga { get; set; }
        public bool TipoTarifa { get; set; }
        [Column("AlmaUserID")]
        public int? AlmaUserId { get; set; }
        [Column(TypeName = "money")]
        public decimal? Cotizacion { get; set; }
        [Column("MonedaID")]
        public byte? MonedaId { get; set; }
        [Column(TypeName = "money")]
        public decimal? ImporteBonificacion { get; set; }
        [Column("DepositoIDSale")]
        public short? DepositoIdsale { get; set; }
        [Column("DepositoIDIngresa")]
        public short? DepositoIdingresa { get; set; }
        [Column("SucursalID")]
        public short? SucursalId { get; set; }
        public int? Bultos { get; set; }
        public int? NroComprobante { get; set; }
        [Column("ZonaImpuestoID")]
        public short? ZonaImpuestoId { get; set; }
        [Key]
        [Column("TipoOperacionID")]
        public byte TipoOperacionId { get; set; }
        /// <summary>
        /// Sector que realizo la Venta
        /// </summary>
        [Column("SectorID")]
        public short? SectorId { get; set; }
        /// <summary>
        /// Indica la Fecha y hora en la que fue anulado
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FechaAnulacion { get; set; }
        /// <summary>
        /// Referencia sobre la anulacion
        /// </summary>
        [StringLength(250)]
        [Unicode(false)]
        public string DetalleAnulacion { get; set; }
        /// <summary>
        /// Usuario q anulo la Guia
        /// </summary>
        [Column("AlmaUserIDAnulo")]
        public int? AlmaUserIdanulo { get; set; }

        [ForeignKey("AlmaUserId")]
        [InverseProperty("TransporteCargaAlmaUser")]
        public virtual Usuario AlmaUser { get; set; }
        [ForeignKey("AlmaUserIdanulo")]
        [InverseProperty("TransporteCargaAlmaUserIdanuloNavigation")]
        public virtual Usuario AlmaUserIdanuloNavigation { get; set; }
        [ForeignKey("ClienteId")]
        [InverseProperty("TransporteCarga")]
        public virtual Cliente Cliente { get; set; }
        [ForeignKey("DepositoIdingresa")]
        [InverseProperty("TransporteCargaDepositoIdingresaNavigation")]
        public virtual Deposito DepositoIdingresaNavigation { get; set; }
        [ForeignKey("DepositoIdsale")]
        [InverseProperty("TransporteCargaDepositoIdsaleNavigation")]
        public virtual Deposito DepositoIdsaleNavigation { get; set; }
        [ForeignKey("DestinoId")]
        [InverseProperty("TransporteCargaDestino")]
        public virtual TransporteOrigenDestino Destino { get; set; }
        [ForeignKey("EntidadSucIddestino")]
        [InverseProperty("TransporteCargaEntidadSucIddestinoNavigation")]
        public virtual EntidadSucursal EntidadSucIddestinoNavigation { get; set; }
        [ForeignKey("EntidadSucIdorigen")]
        [InverseProperty("TransporteCargaEntidadSucIdorigenNavigation")]
        public virtual EntidadSucursal EntidadSucIdorigenNavigation { get; set; }
        [ForeignKey("EstadoCargaId")]
        [InverseProperty("TransporteCarga")]
        public virtual TransporteCargaEstado EstadoCarga { get; set; }
        [ForeignKey("FacturaEstadoId")]
        [InverseProperty("TransporteCarga")]
        public virtual TransporteCargaEstadoFactura FacturaEstado { get; set; }
        [ForeignKey("FleteEstadoId")]
        [InverseProperty("TransporteCarga")]
        public virtual TransporteCargaEstadoFlete FleteEstado { get; set; }
        [ForeignKey("OrigenId")]
        [InverseProperty("TransporteCargaOrigen")]
        public virtual TransporteOrigenDestino Origen { get; set; }
        [ForeignKey("ProductoPrecioId")]
        [InverseProperty("TransporteCarga")]
        public virtual ProductoListaPrecio ProductoPrecio { get; set; }
        [ForeignKey("SectorId")]
        [InverseProperty("TransporteCarga")]
        public virtual Sector Sector { get; set; }
        [ForeignKey("SucursalId")]
        [InverseProperty("TransporteCarga")]
        public virtual Sucursal Sucursal { get; set; }
        [ForeignKey("TraspViajeId")]
        [InverseProperty("TransporteCarga")]
        public virtual TransporteViaje TraspViaje { get; set; }
        [InverseProperty("TransporteCarga")]
        public virtual ICollection<OperacionArchivo> OperacionArchivo { get; set; }
        [InverseProperty("TransporteCarga")]
        public virtual ICollection<TransporteAutorizacionCargaDetalleTransporteCarga> TransporteAutorizacionCargaDetalleTransporteCarga { get; set; }
        [InverseProperty("TransporteCarga")]
        public virtual ICollection<TransporteAutorizacionRemito> TransporteAutorizacionRemito { get; set; }
        [InverseProperty("TransporteCarga")]
        public virtual ICollection<TransporteCargaConceptosAdicionales> TransporteCargaConceptosAdicionales { get; set; }
        [InverseProperty("TransporteCarga")]
        public virtual ICollection<TransporteCargaMovimientoDetalle> TransporteCargaMovimientoDetalle { get; set; }
        [InverseProperty("TransporteCarga")]
        public virtual ICollection<TransporteCrt> TransporteCrt { get; set; }
        [InverseProperty("TransporteCarga")]
        public virtual ICollection<TransproteCargaRemitos> TransproteCargaRemitos { get; set; }
    }
}