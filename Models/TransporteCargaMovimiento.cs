// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    [Index("TipoOperacionId", "MovId", Name = "IX_TransporteCargaMovimiento_TipoOperacionRegistroOperacionID", IsUnique = true)]
    public partial class TransporteCargaMovimiento
    {
        public TransporteCargaMovimiento()
        {
            OperacionArchivo = new HashSet<OperacionArchivo>();
            OperacionCobroWeb = new HashSet<OperacionCobroWeb>();
            RepartoDespachos = new HashSet<RepartoDespachos>();
            RepartoPedido = new HashSet<RepartoPedido>();
            RepartoRendicion = new HashSet<RepartoRendicion>();
            RepartoVentaDirecta = new HashSet<RepartoVentaDirecta>();
            TransporteContrareembolso = new HashSet<TransporteContrareembolso>();
            TransporteMovimientoDestino = new HashSet<TransporteMovimientoDestino>();
        }

        /// <summary>
        /// Nro Reparto Planilla de Carga
        /// </summary>
        [Key]
        [Column("MovID")]
        public int MovId { get; set; }
        public byte? MovTipo { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime FechaAlta { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime FechaMov { get; set; }
        [Column("SucursalID")]
        public short? SucursalId { get; set; }
        [Column("DepositoIDSale")]
        public short? DepositoIdsale { get; set; }
        [Column("ConductorID")]
        public int? ConductorId { get; set; }
        [Column("VehiculoID")]
        public int? VehiculoId { get; set; }
        [StringLength(100)]
        [Unicode(false)]
        public string Precinto { get; set; }
        [Column("AlmaUserID")]
        public int AlmaUserId { get; set; }
        [Column(TypeName = "money")]
        public decimal? ImporteFletero { get; set; }
        public bool Conformado { get; set; }
        public bool Tipo { get; set; }
        public int? NroComprobante { get; set; }
        public int? Filer { get; set; }
        /// <summary>
        /// Detalle Reparto
        /// </summary>
        [StringLength(250)]
        [Unicode(false)]
        public string Descripcion { get; set; }
        /// <summary>
        /// Indica la fecha y hora de regreso del reparto al deposito
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime? FechaRegreso { get; set; }
        /// <summary>
        /// Importe de las Vents de este Reparto
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImpVentas { get; set; }
        /// <summary>
        /// Importe de las Ventas Devueltas (Suma de las Notas de credito)
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImpDevolucion { get; set; }
        /// <summary>
        /// Importe de las ventas q se dejan como pendiente de entrega para el proximo reparto
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImpPendiente { get; set; }
        /// <summary>
        /// Importe de ventas Cobradas
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImpCobrado { get; set; }
        /// <summary>
        /// Importes de las ventas q fueron cobradas antes de las rendicion del reparto (Ventas se llevaron pero que ya estaban cobradas)
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImpCobroAnterior { get; set; }
        /// <summary>
        /// Importes de otros cobros (Ventas q no corresponden a este reparto o de Adelantos)
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImpoOtrosCobro { get; set; }
        /// <summary>
        /// Importe de las ventas q se entregaron pero no se cobraron, quedaron en la cta. Corriente del Ciente
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImpCtaCte { get; set; }
        /// <summary>
        /// Importe de Gastos/Compras que se cargaron a este reparto
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImpGastos { get; set; }
        /// <summary>
        /// Importe de Cobros por Imputaciones (Importes q se entrego al repartidor para gastos, y otros)
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImpCobrosImpu { get; set; }
        /// <summary>
        /// Importe por pagos imputaciones , Pases de caja 
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImpPagosImpu { get; set; }
        /// <summary>
        /// Indico si hubieran diferencias pendientes 
        /// </summary>
        [Column(TypeName = "money")]
        public decimal? ImpRendir { get; set; }
        /// <summary>
        /// De AlmaNet.OperacionTip, 60-Rendicion de Caja 70- Rendicion Reparto
        /// </summary>
        [Column("TipoOperacionID")]
        public byte TipoOperacionId { get; set; }
        [Column("SectorID")]
        public short? SectorId { get; set; }
        [Column(TypeName = "money")]
        public decimal? ImpRetencion { get; set; }
        [Column(TypeName = "money")]
        public decimal? ImpGastosCtaCte { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? UltimaCorrecion { get; set; }
        /// <summary>
        /// 0-Cerrado 1-En Proceso 100-No vinculante
        /// </summary>
        [Column("EstadoID")]
        public byte? EstadoId { get; set; }
        [Column("VendedorID")]
        public int? VendedorId { get; set; }

        [ForeignKey("AlmaUserId")]
        [InverseProperty("TransporteCargaMovimiento")]
        public virtual Usuario AlmaUser { get; set; }
        [ForeignKey("ConductorId")]
        [InverseProperty("TransporteCargaMovimiento")]
        public virtual TransporteConductor Conductor { get; set; }
        [ForeignKey("DepositoIdsale")]
        [InverseProperty("TransporteCargaMovimiento")]
        public virtual Deposito DepositoIdsaleNavigation { get; set; }
        [ForeignKey("SectorId")]
        [InverseProperty("TransporteCargaMovimiento")]
        public virtual Sector Sector { get; set; }
        [ForeignKey("SucursalId")]
        [InverseProperty("TransporteCargaMovimiento")]
        public virtual Sucursal Sucursal { get; set; }
        [ForeignKey("VehiculoId")]
        [InverseProperty("TransporteCargaMovimiento")]
        public virtual TransporteVehiculo Vehiculo { get; set; }
        [ForeignKey("VendedorId")]
        [InverseProperty("TransporteCargaMovimiento")]
        public virtual Vendedor Vendedor { get; set; }
        public virtual ICollection<OperacionArchivo> OperacionArchivo { get; set; }
        [InverseProperty("Mov")]
        public virtual ICollection<OperacionCobroWeb> OperacionCobroWeb { get; set; }
        [InverseProperty("Mov")]
        public virtual ICollection<RepartoDespachos> RepartoDespachos { get; set; }
        [InverseProperty("Mov")]
        public virtual ICollection<RepartoPedido> RepartoPedido { get; set; }
        [InverseProperty("Mov")]
        public virtual ICollection<RepartoRendicion> RepartoRendicion { get; set; }
        [InverseProperty("Mov")]
        public virtual ICollection<RepartoVentaDirecta> RepartoVentaDirecta { get; set; }
        [InverseProperty("Mov")]
        public virtual ICollection<TransporteContrareembolso> TransporteContrareembolso { get; set; }
        [InverseProperty("Mov")]
        public virtual ICollection<TransporteMovimientoDestino> TransporteMovimientoDestino { get; set; }
    }
}