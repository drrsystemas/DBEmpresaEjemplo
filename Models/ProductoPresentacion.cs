// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBEmpresaEjemplo.Models
{
    /// <summary>
    /// Las Distintas presentaciones que tiene un producto, eje. Caja-&gt; Paquetes -&gt; Sobres.
    /// </summary>
    [Index("CodigoId", Name = "IX_ProductoPresentacionCodigoID_")]
    [Index("CodigoId", "PresentacionId", Name = "IX_ProductoPresentacion_CodigoPresentacion", IsUnique = true)]
    [Index("PresentacionId", Name = "IX_ProductoPresentacion_PresentacionID")]
    public partial class ProductoPresentacion
    {
        public ProductoPresentacion()
        {
            ProduccionGastoProducto = new HashSet<ProduccionGastoProducto>();
            ProduccionOrdenItem = new HashSet<ProduccionOrdenItem>();
            ProduccionOrdenItemDesglose = new HashSet<ProduccionOrdenItemDesglose>();
            ProduccionOrdenItemProgramacionInsumos = new HashSet<ProduccionOrdenItemProgramacionInsumos>();
            ProductoCodigoBarra = new HashSet<ProductoCodigoBarra>();
            ProductoEnvaseProductoPresentacion = new HashSet<ProductoEnvase>();
            ProductoEnvaseProductoPresentacionIdenvaseNavigation = new HashSet<ProductoEnvase>();
            ProductoListaPrecio = new HashSet<ProductoListaPrecio>();
            ProductoNroSerie = new HashSet<ProductoNroSerie>();
            ProductoNroSerieLote = new HashSet<ProductoNroSerieLote>();
            ProductoProcesoInsumo = new HashSet<ProductoProcesoInsumo>();
            ProductoProcesoPrecio = new HashSet<ProductoProcesoPrecio>();
            TransporteCargaAdicionales = new HashSet<TransporteCargaAdicionales>();
        }

        /// <summary>
        /// Codigo del Producto
        /// </summary>
        [Column("CodigoID")]
        public int CodigoId { get; set; }
        /// <summary>
        /// Indica cual es El tipo de Presentacion de las unidades que contiene en caso de contener
        /// </summary>
        [Column("PresentacionID")]
        public short PresentacionId { get; set; }
        /// <summary>
        /// Cantidad de Unidades que contiene en Caso de estar contenido en otra presentacion mayor
        /// </summary>
        [Column(TypeName = "decimal(12, 4)")]
        public decimal UnidadesContiene { get; set; }
        /// <summary>
        /// Se es Utilizado en la realizacion de Ventas
        /// </summary>
        public bool SeUtilizaEnVenta { get; set; }
        /// <summary>
        /// Si es utilizado en el ingreso de Compras
        /// </summary>
        public bool SeUtilizaEnCompra { get; set; }
        /// <summary>
        /// Se obtiene de la tabla AlmaNET.UnidadesMedida
        /// </summary>
        [Column("UnidadMedidaID")]
        public short UnidadMedidaId { get; set; }
        /// <summary>
        /// Cantidad en esa unidad de Medida
        /// </summary>
        [Column(TypeName = "decimal(9, 4)")]
        public decimal? CantidadUnidaMedida { get; set; }
        /// <summary>
        /// Si Tiene asignado Nro de Serie
        /// </summary>
        public bool? UtilizaNroSerie { get; set; }
        [Key]
        [Column("ProductoPresentacionID")]
        public int ProductoPresentacionId { get; set; }
        /// <summary>
        /// Se optiene de  AlmaNET.ProductoNroSerieDetalleTipoCalculos y se determina que unidad de medidas utilizar y la formula para el calculo 
        /// </summary>
        [Column("CalculoID")]
        public short? CalculoId { get; set; }
        /// <summary>
        /// Indica el tipo de empaque del Producto (Botella, Paquete, Caja, pallet, Pesable, Etc) se Obtiene de AlmaNET.EmpaqueTipo
        /// </summary>
        [Column("EmpaqueID")]
        public short? EmpaqueId { get; set; }
        /// <summary>
        /// Indica si es divisible por cuantas unidades o Fracciones
        /// </summary>
        [Column(TypeName = "decimal(9, 4)")]
        public decimal Fracciones { get; set; }
        [Column(TypeName = "decimal(9, 3)")]
        public decimal? DimensionProfundidad { get; set; }
        [Column(TypeName = "decimal(9, 3)")]
        public decimal? DimensionAncho { get; set; }
        [Column(TypeName = "decimal(9, 3)")]
        public decimal? DimensionAlto { get; set; }
        [Column("EncomiendaModeloID")]
        public short? EncomiendaModeloId { get; set; }
        [Column(TypeName = "decimal(9, 3)")]
        public decimal? DimensionPeso { get; set; }

        [ForeignKey("CodigoId")]
        [InverseProperty("ProductoPresentacion")]
        public virtual Producto Codigo { get; set; }
        [ForeignKey("PresentacionId")]
        [InverseProperty("ProductoPresentacion")]
        public virtual ProductoPresentacionTipo Presentacion { get; set; }
        [InverseProperty("ProductoPresentacion")]
        public virtual ProductoStock ProductoStock { get; set; }
        [InverseProperty("ProductoPresentacion")]
        public virtual ICollection<ProduccionGastoProducto> ProduccionGastoProducto { get; set; }
        [InverseProperty("ProductoPresentacion")]
        public virtual ICollection<ProduccionOrdenItem> ProduccionOrdenItem { get; set; }
        [InverseProperty("ElaborarCodigo")]
        public virtual ICollection<ProduccionOrdenItemDesglose> ProduccionOrdenItemDesglose { get; set; }
        [InverseProperty("ProductoInsumo")]
        public virtual ICollection<ProduccionOrdenItemProgramacionInsumos> ProduccionOrdenItemProgramacionInsumos { get; set; }
        [InverseProperty("ProductoPresentacion")]
        public virtual ICollection<ProductoCodigoBarra> ProductoCodigoBarra { get; set; }
        [InverseProperty("ProductoPresentacion")]
        public virtual ICollection<ProductoEnvase> ProductoEnvaseProductoPresentacion { get; set; }
        [InverseProperty("ProductoPresentacionIdenvaseNavigation")]
        public virtual ICollection<ProductoEnvase> ProductoEnvaseProductoPresentacionIdenvaseNavigation { get; set; }
        [InverseProperty("ProductoPresentacion")]
        public virtual ICollection<ProductoListaPrecio> ProductoListaPrecio { get; set; }
        [InverseProperty("ProductoPresentacion")]
        public virtual ICollection<ProductoNroSerie> ProductoNroSerie { get; set; }
        [InverseProperty("ProductoPresentacion")]
        public virtual ICollection<ProductoNroSerieLote> ProductoNroSerieLote { get; set; }
        [InverseProperty("ProductoInsumo")]
        public virtual ICollection<ProductoProcesoInsumo> ProductoProcesoInsumo { get; set; }
        [InverseProperty("ProductoPresentacion")]
        public virtual ICollection<ProductoProcesoPrecio> ProductoProcesoPrecio { get; set; }
        [InverseProperty("ProductoPresentacion")]
        public virtual ICollection<TransporteCargaAdicionales> TransporteCargaAdicionales { get; set; }
    }
}